!   Settings
    
    import variable RefData
        and variable Static
        and variable Mobile
        and variable Height

    script Setup
    
    div Body
    div Mask
    div Div
    h2 Title
    h3 Section
    hr HR
    table Table
    table VTable
    tr TR
    tr VTR
    td TD
    td VTD
    input New
    input VNew
    input VReg
    input VDescription
    input VFront
    input VRear
    input Email
    textarea JSON
    img Up
    img VUp
    img Delete
    img VDelete
    img Plus
    img VPlus
    button VRegButton
    button Save
    button Close
    button Export
    button Import
    button Close2
    variable Vehicles
    variable Vehicle
    variable Group
    variable GroupCount
    variable Sections
    variable NSections
    variable Temp
    variable Name
    variable Row
    variable Total
    variable Item
    variable Reg
    variable Width
    variable Editing
    variable NClicks
    variable G
    variable N
    variable M
    variable V
    variable HH
    variable WW
    variable H
    variable W
    variable Left
    variable Top
    
    on message go to Start
    set ready
    stop

Start:
	history push
    on close
    begin
      remove element Body
      exit
    end
    
    create Body in body
    set style `position` of Body to `relative`
    set style `background` of Body to `lightgray`
!	Extract the data
    put property `vehicles` of RefData into Vehicles
    put property `sections` of RefData into Sections
    put the json count of Sections into NSections
    set the elements of Group to NSections
    set the elements of GroupCount to NSections
    set the elements of New to NSections
    set the elements of Plus to NSections
    put 0 into G
    while G is less than NSections
    begin
        index Group to G
    	put property `group` cat G of RefData into Group
        add 1 to G
    end

!	Do initial draw or redraw following a change
Redraw:
	clear Body
    create Title in Body
    set the style of Title to `text-align:center`
    set the content of Title to `Settings`

    put 0 into NClicks
    on click Title
    begin
        add 1 to NClicks
    	if NClicks is 3
        begin
        	set RefData to object
            put RefData into storage as `refdata`
            if not Static rest post RefData to `_save/resources/json/refdata.json`
            history pop
        end
    end

    set the elements of Save to 2
    set the elements of Close to 2
    index Save to 0
    index Close to 0
    create Save in Body
    set the style of Save to `float:left;width:49%;margin-bottom:0.5em`
    set the text of Save to `Save`
    create Close in Body
    set the style of Close to `float:right;width:49%;margin-bottom:0.5em`
    set the text of Close to `Close`

!	Do the vehicle list
	gosub to DoVehicles

!	Do the checklist
    create HR in Body
    put 0 into Total
    put 0 into G
    while G is less than NSections
    begin
        index Group to G
        index GroupCount to G
    	put the json count of Group into N
        add N to Total
        put Total into GroupCount
        add 1 to G
    end
    set the elements of Up to Total
    set the elements of Delete to Total

    put 0 into Row
	put 0 into G
    while G is less than NSections
    begin
        index Group to G
        index New to G
        index Plus to G
        create Section in Body
        set the content of Section to element G of Sections
        gosub to DoGroup
        create HR in Body
    	add 1 to G
    end
    create Table in Body
    set the style of Table to `width:100%`
    create TR in Table
    set style `height` of TR to `3em`
    create TD in TR
    set style `width` of TD to `30%`
    set the content of TD to `Email:`
    create TD in TR
    create Email in TD
    set the style of Email to `width:100%`
    set the text of Email to property `email` of RefData
    create HR in Body
    index Save to 1
    create Save in Body
    set the style of Save to `float:left;width:49%;margin-bottom:0.5em`
    set the text of Save to `Save`
    index Close to 1
    create Close in Body
    set the style of Close to `float:right;width:49%;margin-bottom:0.5em`
    set the text of Close to `Close`

    on click Up go to DoUp
    on click Delete go to DoDelete
    on click Plus go to DoPlus
    on click Save go to DoSaveAnimate
    on click Close history pop

    if not Mobile
    begin
        multiply Height by 9 giving Width
        divide Width by 16
        set style `width` of Body to Width cat `px`
        set style `margin` of Body to `0 auto`
    end
    
    clear Editing
    stop

!	Process the vehicle list
DoVehicles:
	set the elements of VTR to the json count of Vehicles
	set the elements of VRegButton to the json count of Vehicles
	set the elements of VUp to the json count of Vehicles
    set the elements of VDelete to the json count of Vehicles
    set the elements of VReg to the json count of Vehicles
    set the elements of VDescription to the json count of Vehicles
    set the elements of VFront to the json count of Vehicles
    set the elements of VRear to the json count of Vehicles
    set the elements of Vehicle to the json count of Vehicles
    create Section in Body
    set the content of Section to `Vehicles`
    create VTable in Body
    set the style of VTable to `width:100%`
    create TR in VTable
    set style `height` of TR to `3em`
    create TD in TR
    create Import in TD
    set the style of Import to `width:100%;font-weight:bold`
    set the text of Import to `Import a vehicle`
    on click Import go to DoImport
    create TD in TR
    set the style of TD to `width:3em`
    create TD in TR
    set the style of TD to `width:3em`
    put 0 into V
    while V is less than the json count of Vehicles
    begin
    	index Vehicle to V
    	index VTR to V
        create VTR in VTable
        set style `height` of VTR to `3em`
        put element V of Vehicles into Vehicle
        create VTD in VTR
        index VRegButton to V
        create VRegButton in VTD
    	set the style of VRegButton to `width:100%`
        set the text of VRegButton to property `reg` of Vehicle
        create TD in VTR
        set the style of TD to `width:3em;text-align:center`
        if V is not 0
        begin
            index VUp to V
            create VUp in TD
            set the style of VUp to `width:2em;height:2em`
            set attribute `src` of VUp to `resources/icons/up.png`
        end
        create TD in VTR
        set the style of TD to `width:3em;text-align:center`
        index VDelete to V
        create VDelete in TD
        set the style of VDelete to `width:2em;height:2em`
        set attribute `src` of VDelete to `resources/icons/cross.png`
        add 1 to V
    end
!	Add the New Vehicle box and button
    if the json count of Vehicles is 0
    begin
        create TR in VTable
        create TD in TR
        set attribute `colspan` of TD to 3
        set style `color` of TD to `red`
        set the content of TD to `Add a vehicle. Type the reg no. and tap +`
    end
    create TR in VTable
    set style `height` of TR to `3em`
    create TD in TR
    create VNew in TD
    set the style of VNew to `width:100%`
    create TD in TR
    set the style of TD to `width:3em;text-align:center`
    create VPlus in TD
    set the style of VPlus to `width:2em;height:2em`
    set attribute `src` of VPlus to `resources/icons/plus.png`
    create TD in TR
    set the style of TD to `width:3em;text-align:center`
    on click VRegButton
    begin
        if Editing go to DoSaveAnimate
        else go to VehicleEdit
    end
    on click VUp go to VehicleUp
    on click VDelete go to VehicleDelete
    on click VPlus go to VehiclePlus
	return

!	Process a group of items
DoGroup:
    create Table in Body
    set the style of Table to `width:100%`
    put 0 into N
    while N is less than the json count of Group
    begin
    	put element N of Group into Name
    	gosub to DoRow
        add 1 to Row
        add 1 to N
    end
!	Add the New Item box and button
    create TR in Table
    set style `height` of TR to `3em`
    create TD in TR
    create New in TD
    set the style of New to `width:100%`
    create TD in TR
    set the style of TD to `width:3em;text-align:center`
    create Plus in TD
    set the style of Plus to `width:2em;height:2em`
    set attribute `src` of Plus to `resources/icons/plus.png`
    create TD in TR
    set the style of TD to `width:3em;text-align:center`
	return

!	Process a single row
DoRow:
    create TR in Table
    set style `height` of TR to `3em`
    create TD in TR
    set the content of TD to Name
    create TD in TR
    set the style of TD to `width:3em;text-align:center`
    if N is not 0
    begin
        index Up to Row
        create Up in TD
        set the style of Up to `width:2em;height:2em`
        set attribute `src` of Up to `resources/icons/up.png`
    end
    create TD in TR
    set the style of TD to `width:3em;text-align:center`
    index Delete to Row
    create Delete in TD
    set the style of Delete to `width:2em;height:2em`
    set attribute `src` of Delete to `resources/icons/cross.png`
	return

!	Edit a vehicle
VehicleEdit:
    set Editing
    put the index of VRegButton into V
    index Vehicle to V
    index VReg to V
    index VDescription to V
    index VFront to V
    index VRear to V
    index VTR to V
    clear VTR
    create TD in VTR
    set attribute `colspan` of TD to 3
    create Table in TD
    set the style of Table to `width:95%;margin:0 auto;border:1px solid gray`
    create TR in Table
    create TD in TR
    create TR in Table
    set style `height` of TR to `3em`
    create TD in TR
    set style `width` of TD to `35%`
    set the content of TD to `Reg:`
    create TD in TR
    set style `width` of TD to `55%`
    create VReg in TD
    set style `width` of VReg to `100%`
    set the text of VReg to property `reg` of Vehicle
    create TR in Table
    set style `height` of TR to `3em`
    create TD in TR
    set the content of TD to `Description:`
    create TD in TR
    set style `width` of TD to `50%`
    create VDescription in TD
    set style `width` of VDescription to `100%`
    set the text of VDescription to property `description` of Vehicle
    if the text of VDescription is `undefined` set the text of VDescription to empty
    create TR in Table
    set style `height` of TR to `3em`
    create TD in TR
    set the content of TD to `Front PSI:`
    create TD in TR
    set style `width` of TD to `50%`
    create VFront in TD
    set style `width` of VFront to `100%`
    set the text of VFront to property `front` of Vehicle
    if the text of VFront is `undefined` set the text of VFront to 0
    create TR in Table
    set style `height` of TR to `3em`
    create TD in TR
    set the content of TD to `Rear PSI:`
    create TD in TR
    set style `width` of TD to `50%`
    create VRear in TD
    set style `width` of VRear to `100%`
    set the text of VRear to property `rear` of Vehicle
    if the text of VRear is `undefined` set the text of VRear to 0
    create TR in Table
    set style `height` of TR to `3em`
    create TD in TR
    create TD in TR
    create Export in TD
    set the style of Export to `width:100%`
    set the text of Export to `Export Vehicle Data`
    on click Export go to DoExport
    return

!	Move a vehicle up
VehicleUp:
   	put the index of VUp into N
    put Vehicles into Temp
    set Vehicles to array
    put 0 into M
    while M is less than the json count of Temp
    begin
    	add 1 to M
        if M is less than N
        begin
            take 1 from M
         	append element M of Temp to Vehicles
        end
        else if M is N
        begin
           	append element M of Temp to Vehicles
            take 1 from M
          	append element M of Temp to Vehicles
            add 1 to M
        end
        else
        begin
            take 1 from M
           	append element M of Temp to Vehicles
        end
       	add 1 to M
    end
    go to Redraw

!	Delete a vehicle
VehicleDelete:
    put the index of VDelete into N
    json delete element N of Vehicles
    go to Redraw

!	Add a vehicle
VehiclePlus:
    put the index of VPlus into V
    index VNew to V
    put the text of VNew into Reg
    if Reg
    begin
    	set Item to object
    	set property `reg` of Item to Reg
        set property `description` of Item to `-`
        set property `front` of Item to 0
        set property `rear` of Item to 0
    	append Item to Vehicles
        set property `vehicles` of RefData to Vehicles
    end
    go to Redraw

!	Get the group and offset of an item
GetGroupOffset0:
	put 0 into G
    while G is less than NSections
    begin
		index GroupCount to G
        if N is less than G
        begin
        	index Group to G
            if G is greater than 0
            begin
            	take 1 from G
                index GroupCount to G
                take GroupCount from N
                return
            end
        end
        add 1 to G
    end
	return

!	Get the group and offset of an item
GetGroupOffset:
	index GroupCount to 0
    if N is less than GroupCount
    begin
    	index Group to 0
        return
    end
    index GroupCount to 1
    if N is less than GroupCount
    begin
    	index GroupCount to 0
        take GroupCount from N
        index Group to 1
        return
    end
    index GroupCount to 2
    if N is less than GroupCount
    begin
    	index GroupCount to 1
        take GroupCount from N
        index Group to 2
        return
    end
    index GroupCount to 2
    take GroupCount from N
    index Group to 3
    return

!	Move a check up
DoUp:
    put the index of Up into N
    gosub to GetGroupOffset
    put Group into Temp
    set Group to array
    put 0 into M
    while M is less than the json count of Temp
    begin
       	add 1 to M
        if M is less than N
        begin
            take 1 from M
          	append element M of Temp to Group
        end
        else if M is N
        begin
          	append element M of Temp to Group
            take 1 from M
          	append element M of Temp to Group
            add 1 to M
        end
        else
        begin
            take 1 from M
           	append element M of Temp to Group
        end
       	add 1 to M
    end
    go to Redraw

!	Delete a check
DoDelete:
    put the index of Delete into N
    gosub to GetGroupOffset
    json delete element N of Group
    go to Redraw

!	Add a check
DoPlus:
    put the index of Plus into G
    index New to G
    index Group to G
    put the text of New into Item
    if Item append Item to Group
    go to Redraw

!	Animate the Save button
DoSaveAnimate:
    if Editing go to DoVSave
    gosub to DoSave
    index Save to 0
    set style `color` of Save to `green`
    set the text of Save to `Saved`
    index Save to 1
    set style `color` of Save to `green`
    set the text of Save to `Saved`
    wait 3
    index Save to 0
    set style `color` of Save to ``
    set the text of Save to `Save`
    index Save to 1
    set style `color` of Save to ``
    set the text of Save to `Save`
    stop

!   Save a vehicle record
DoVSave:
    set property `reg` of Vehicle to the text of VReg
    set property `description` of Vehicle to the text of VDescription
    set property `front` of Vehicle to the text of VFront
    set property `rear` of Vehicle to the text of VRear
    put the json count of Vehicles into N
    set Vehicles to array
    put 0 into V
    while V is less than N
    begin
       	index Vehicle to V
        append Vehicle to Vehicles
       	add 1 to V
    end
    set property `vehicles` of RefData to Vehicles
    gosub to DoSave
    go to Redraw

!	Save the current values
DoSave:
	set property `vehicles` of RefData to Vehicles
    put 0 into G
    while G is less than the json count of Group
    begin
        index Group to G
    	set property `group` cat G of RefData to Group
        add 1 to G
    end
    set property `email` of RefData to the text of Email
    if not Static rest post RefData to `_save/resources/json/refdata.json`
    return

DoImport:
	gosub to DoIEPopup
    create Close2 in Div
    set the style of Close2 to `float:left;width:49%;margin-bottom:0.5em`
    set the text of Close2 to `Import`
    on click Close2
    begin
    	put the content of JSON into Item
        if Item is empty stop
    	append Item to Vehicles
        set property `vehicles` of RefData to Vehicles
    	remove element Mask
        go to Redraw
    end
    create Close2 in Div
    set the style of Close2 to `float:right;width:49%;margin-bottom:0.5em`
    set the text of Close2 to `Close`
    on click Close2 remove element Mask
    stop

DoExport:
	gosub to DoIEPopup
    json format Vehicle
    set the content of JSON to Vehicle
    create Close2 in Div
    set the style of Close2 to `width:100%`
    set the text of Close2 to `Close`
    on click Close2 remove element Mask
	stop

DoIEPopup:
	if Mobile
    begin
    	put the screen width into WW
        put the screen height into HH
    end
    else
    begin
    	put the width of Body into WW
    	put the height of window into HH
    end
    multiply WW by 3 giving W
    divide W by 4
    multiply HH by 3 giving H
    divide H by 4
    take W from WW giving Left
    divide Left by 2
    take H from HH giving Top
    divide Top by 2
    create Mask in Body
    set the style of Mask to `position:absolute;left:0;top:0;background:rgba(0,0,0,0.5);width:`
    	cat WW cat `px;height:` cat HH cat `px`
	create Div in Mask
    set the style of Div to `position:absolute;left:` cat Left cat `;top:` cat Top
    	cat `;width:` cat W cat `px;height:` cat H cat `px;border:1px solid black;background:white`
    create JSON in Div
    set the style of JSON to `width:100%;height:100%;overflow:scroll`
	return