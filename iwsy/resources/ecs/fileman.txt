!   File Manager

    script FileManager

    import div Container

    div Panel
    div FileListing
    div FileRow
    div Scroller
    div Uploader
    div Buttons
    div Location
    div URLPanel
    span UploadStatus
    progress UploadProgress
    input UploadFile
    input URL
    button CopyURLButton
    button CloseButton
    button NewFolderButton
    button UploadButton
    button DeleteButton
    a FileName
    img Icon
    img Image
    variable Mobile
    variable FileCount
    variable File
    variable Name
    variable Type
    variable Source
    variable Content
    variable Home
    variable UserRecord
    variable Email
    variable Password
    variable AdminPassword
    variable CurrentPath
    variable FilePath
    variable Path
    variable N
    variable Even
    variable IsHome
    variable Post

    get IsHome from storage as `.ishome`
	get AdminPassword from storage as `.password`

    if portrait
    begin
      	if mobile set Mobile else clear Mobile
    end

    create Panel in Container
    if Mobile set the style of Panel to `background:#ffe`
    else set the style of Panel to `width:100%;height:100%`

    create Uploader in Panel
    set the style of Uploader to `width:100%;padding:0.5em 0;font-size:80%;text-align:center`
    create UploadFile in Uploader
    set the style of UploadFile to `font-family:serif;color:black`
    set attribute `type` of UploadFile to `file`
    set attribute `name` of UploadFile to `Source`
    create UploadStatus in Uploader
    set the style of UploadStatus to `font-family:serif;color:black`
    create UploadProgress in Uploader
    set style `margin-left` of UploadProgress to `0.5em`
    set attribute `value` of UploadProgress to 0
    set attribute `max` of UploadProgress to 100

    create Buttons in Panel
    set the style of Buttons to `display:flex;margin-bottom:0.5em`
    create UploadButton in Buttons
    set the style of UploadButton to `flex:1;width:150px;height:40px;font-family:sans;color:black`
    set the text of UploadButton to `Upload`
    on click UploadButton go to Upload
    create NewFolderButton in Buttons
    set the style of NewFolderButton to `flex:1;width:150px;height:40px;font-family:sans;color:black`
    set the text of NewFolderButton to `New Folder`
    create DeleteButton in Buttons
    set the style of DeleteButton to `flex:1;width:150px;height:40px;font-family:sans;color:black`
    set the text of DeleteButton to `Delete`
    create CloseButton in Buttons
    set the style of CloseButton to `flex:1;width:150px;height:40px;font-family:sans;color:black`
    set the text of CloseButton to `Close`
    on click CloseButton go to Exit

    create FileListing in Panel
    set the style of FileListing to `width:100%;height:80%;text-align:center`
    create Location in FileListing
    set the style of Location to `width:100%;text-align:left;color:black;padding:0 0.5em`
    
    create URLPanel in FileListing
    set the style of URLPanel to `display:none`
    create URL in URLPanel
    set the style of URL to `flex:1;text-align:left;font-family:sans;color:black;padding:0 0.5em`
    create CopyURLButton in URLPanel
    set the style of CopyURLButton to `width:8em;margin:0.2em 0.5em 0.2em 1em`
    set the text of CopyURLButton to `Copy URL`
    set attribute `title` of CopyURLButton to `Copy the URL of this image`

    create Scroller in FileListing
    set the style of Scroller to `width:100%;height:100%;text-align:left;overflow-y:scroll;font-family:mono`
    create Image in FileListing
    set the style of Image to `margin:0 auto;max-width:100%;max-height:100%`
    
    on click CopyURLButton copy URL

    on click NewFolderButton
    begin
        put prompt `Name of folder:` with `new` into Path
        if Path is empty stop
        replace ` ` with `-` in Path
        put CurrentPath cat `/` cat Path into Path
        rest post to `mkdir/resources/` cat Path or
        begin
            alert `Failed to create a directory.`
            stop
        end
        goto Browser
    end

    on message go to Show
    set ready
    stop

Show:
    set style `display` of Container to `block`

	if IsHome is `true`
    begin
        get UserRecord from storage as `.user`
        put property `email` of UserRecord into Email
        get Password from storage as `user.password`
        put property `home` of UserRecord into Home
        put `users/` cat Home cat `/` cat property `id` of UserRecord into Home
        put Home cat `/images` into Home
    end
    else put `images` into Home
    get CurrentPath from storage as `.filepath`
    if CurrentPath is empty put Home into CurrentPath

!	Build the list
Browser:
    put CurrentPath into storage as `.filepath`
    if IsHome is `true`
    begin
        rest get Content from `ulist/` cat Email cat `/` cat Password cat `/` cat CurrentPath cat `?v=` cat now
        or begin
            alert `Failed to list files.`
            put empty into storage as `.filepath`
            stop
        end
    end
    else
    begin
        rest get Content from `list/` cat AdminPassword cat `/` cat CurrentPath cat `?v=` cat now
        or begin
            alert `Failed to list files.`
            put empty into storage as `.filepath`
            stop
        end
    end
    put CurrentPath into Path
    set the content of Location to `Current path: ` cat Path
    put the json count of Content into FileCount
    set the elements of File to FileCount
    set the elements of FileName to FileCount

  ! Add a row for each file
    clear Scroller
    set Even

    if CurrentPath is not Home
    begin
        create FileRow in Scroller
        set the style of FileRow to `width:90%;padding:0.5em 1em;text-align:left`
        create Icon in FileRow
        set the style of Icon to `float:left;margin-right:0.5em;width:20px`
        set attribute `src` of Icon to `/resources/icon/arrow-back.png`
        create FileName in FileRow
        set the content of FileName to `(back to previous folder)`
        on click FileName
        begin
            put the position of the last `/` in CurrentPath into N
            put left N of CurrentPath into CurrentPath
            go to Browser
        end
    end

    set the elements of FileName to FileCount
    put 0 into N
    while N is less than FileCount
    begin
        index File to N
        put element N of Content into File
        put property `name` of File into Name
        put property `type` of File into Type
        create FileRow in Scroller
        set the style of FileRow to `clear:both;padding:0.5em 1em;text-align:left`
        if Even set style `background` of FileRow to `#eee`
        create Icon in FileRow
        set the style of Icon to `float:left;margin-right:0.5em;width:20px`
        if Type is `dir` put `folder.png` into Source
        else if Type is `img` put `image.png` into Source
        else if Type is `txt` put `text.png` into Source
        else if Type is `doc` put `document.png` into Source
        else put `unknown.png` into Source
        set attribute `src` of Icon to `/resources/icon/` cat Source
        index FileName to N
        create FileName in FileRow
        set the content of FileName to Name
        on click FileName go to SelectFile
        toggle Even
      add 1 to N
    end

    on click DeleteButton
    begin
        if FileCount is 0
        begin
            put Path into CurrentPath
            if IsHome is `true` put `udelete/` cat Email cat `/` cat Password cat `/` cat CurrentPath into Post
            else put `delete/` cat AdminPassword cat `/` cat CurrentPath into Post
            rest post to Post or
            begin
                alert `Failed to delete a file.`
                stop
            end
            put the position of the last `/` in CurrentPath into N
            put left N of CurrentPath into CurrentPath
            go to Browser
        end
        else
        begin
          	alert `Folder is not empty`
        end
    end

    stop

SelectFile:
    index File to the index of FileName
    put property `type` of File into Type
    if Type is `dir`
    begin
        put CurrentPath cat `/` cat the content of FileName into CurrentPath
      	goto Browser
    end
    if Type is `img`
    begin
        set style `display` of Uploader to `none`
        set style `display` of UploadButton to `none`
        set style `display` of NewFolderButton to `none`
        set style `display` of Location to `none`
        set style `display` of URLPanel to `flex`

        set style `display` of Scroller to `none`
        set style `display` of Image to `block`
        put CurrentPath cat `/` cat property `name` of File into FilePath
        set attribute `src` of Image to `/resources/` cat FilePath cat `?v=` cat now
        on click CloseButton go to CloseMedia
        set the text of URL to `resources/` cat FilePath
        on click DeleteButton
        begin
            if IsHome is `true` put `udelete/` cat Email cat `/` cat Password cat `/` cat FilePath into Post
            else put `delete/` cat AdminPassword cat `/` cat FilePath into Post
            rest post to Post or
            begin
                alert `Failed to delete the image.`
                stop
            end
            go to CloseMedia
        end
    end
    stop

CloseMedia:
    set style `display` of Image to `none`
    set style `display` of Scroller to `block`
    set style `display` of Uploader to `inline-block`
    set style `display` of UploadButton to `inline-block`
    set style `display` of NewFolderButton to `inline-block`
    set the content of Location to `Current path: ` cat CurrentPath
    set style `display` of Location to `block`
    set style `display` of URLPanel to `none`
    on click CloseButton go to Exit
    go to Browser

Upload:
    if UploadFile is empty alert `Please choose a file to upload`
    else
    begin
        put CurrentPath into Path
        if IsHome is `true` put `uupload/` cat Email cat `/` cat Password cat `/` cat Path into Path
        else put `upload/` cat AdminPassword cat `/` cat Path into Path
        upload UploadFile to Path with UploadProgress and UploadStatus
        goto Browser
    end
    stop

Exit:
    set style `display` of Container to `none`
    stop