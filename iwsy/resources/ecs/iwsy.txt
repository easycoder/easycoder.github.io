!	IWSY

	script IWSY
    
    div Body
    div Left
    div Right
    div Masthead
    div Title
    div Subtitle
    div Controls
    div ContentDiv
    div Buttons
    div Tabs
    div Tab
    div StepsPanel
    div BlocksPanel
    div ContentPanel
    div Player
    div UserPanel
    div FileManPanel
    div HelpPanel
    div Panel
    div Div
    div Mask
    table Table
    tr TR
    td TD
    span Span
    input Status
    input NameEditor
    button SectionButton
    img New
    img Open
    img Save
    img RunStop
    img FullScreen
    img Delete
    img User
    img FileMan
    img Help
    img Gear
    img FSPrompt
    a Link
    module StepsModule
    module BlocksModule
    module ContentModule
    module UserModule
    module FileManModule
    module HelpModule
    variable Mobile
    variable LastSavedState
    variable Content
    variable Script
    variable Presentation
    variable Name
    variable ShowRun
    variable ReadOnly
    variable CallStack
    variable Message
    variable Section
    variable Item
    variable CurrentScriptName
    variable Action
    variable Running
    variable UserRecord
    variable UserHome
    variable UserEmail
    variable UserPassword
    variable Args
    variable Protocol
    variable Domain
    variable Arg
    variable N

  ! The browser
    div Overlay
    div Scroller
    div Media
    div FileListing
    div FileRow
    div LowerPanel
    button CloseButton
    a FileName
    variable Alpha
    variable FileList
    variable FileCount
    variable File
    variable Files
    variable FileIsOpen
    
!	Test if site is on a static host
    clear ReadOnly
    rest get Item from `test`
    or begin
    	print `Static site`
        set ReadOnly
        go to Start
    end

Start:
    json parse url the location as Args
    put property `protocol` of Args into Protocol
    put property `domain` of Args into Domain
    
    put empty into CallStack
    history set
    on restore
    begin
        put the json count of CallStack into N
    end
    if portrait
    begin
    	if mobile set Mobile else clear Mobile
    end
    
    put empty into storage as `.user`
    
    set the title to `IWSY`
    create Body
    set the style of Body to `width:100%;height:100%;position:relative`
    if not Mobile set style `display` of Body to `flex`

!	The left-hand panel
    create Left in Body
	set the style of Left to
    	`flex:1;height:100%;border-right:1px solid black;margin-right:0.5em;display:flex;flex-direction:column`
    
    create Masthead in Left
    set the style of Masthead to
    	`border:0.2em solid purple;text-align:center;color:lemonchiffon;background:darkmagenta;position:relative`
    create Title in Masthead
    set the style of Title to `font-size:4em;font-weight:bold`
    set the content of Title to `I Wanna Show You`
    create Subtitle in Masthead
    set the style of Subtitle to
    	`position:relative;top:-0.5em;font-size:1.5em;font-weight:bold;font-style:italic`
    set the content of Subtitle to `powerful web-based presentations`
    
    create Controls in Left
    set the style of Controls to `padding:0 0.5em`

    create Buttons in Controls
    set the style of Buttons to `width:100%;padding:0.5em 0;position:relative`
    
    create Table in Controls
    set the style of Table to `width:100%`
    create TR in Table
    create TD in TR
    set the style of TD to `width:6em`
    set the content of TD to `Script name`

    create TD in TR
    set the style of TD to `width:8em`
    create NameEditor in TD
    set the style of NameEditor to `width:100%`
    
    create TD in TR
    set the style of TD to `width:2em;text-align:center`
    create Link in TD
    create Gear in Link
    set the style of Gear to `height:1em`
    set attribute `src` of Gear to `resources/icon/gear.png`
    set attribute `title` of Gear to `Settings & Information`
    
    create TD in TR
    set the style of TD to `color:green`
    create Status in TD
    set the style of Status to `width:100%;text-align:right;padding-right:0.5em`
    set attribute `readonly` of Status to `readonly`
    
    create Link in Buttons
    create New in Link
    set the style of New to `width:40px;margin-right:0.5em`
    set attribute `src` of New to `resources/icon/new.png`
    set attribute `title` of New to `New`
    create Link in Buttons
    create Open in Link
    set the style of Open to `width:40px;margin-right:0.5em`
    set attribute `src` of Open to `resources/icon/open.png`
    set attribute `title` of Open to `Open`
    create Link in Buttons
    create Save in Link
    set the style of Save to `width:40px;margin-right:1.5em`
    set attribute `src` of Save to `resources/icon/save.png`
    set attribute `title` of Save to `Save`
    create Link in Buttons
    create Delete in Link
    set the style of Delete to `width:40px;margin-right:1.5em`
    set attribute `src` of Delete to `resources/icon/trash.png`
    set attribute `title` of Delete to `Delete`
    create Link in Buttons
    create FileMan in Link
    set the style of FileMan to `width:40px;margin-right:1.5em`
    set attribute `src` of FileMan to `resources/icon/fileman.png`
    set attribute `title` of FileMan to `File Manager`
    create Link in Buttons
    create RunStop in Link
    set the style of RunStop to `width:40px;margin-right:1.5em`
    set attribute `src` of RunStop to `resources/icon/run.png`
    set attribute `title` of RunStop to `Run`
    create Link in Buttons
    create FullScreen in Link
    set the style of FullScreen to `width:40px;margin-right:1.5em`
    set attribute `src` of FullScreen to `resources/icon/fullscreen.png`
    set attribute `title` of FullScreen to `Run full-screen`
    create Link in Buttons
    create Help in Link
    set the style of Help to `width:40px;margin-right:1.5em`
    set attribute `src` of Help to `resources/icon/help.png`
    set attribute `title` of Help to `Help`
    create Link in Buttons
    create User in Link
    set the style of User to `width:40px;position:absolute;top:0.5em;right:0.5em`
    set attribute `src` of User to `resources/icon/user.png`
    set attribute `title` of User to `Login`
    
    create Player in Left
    set the style of Player to `margin:0.5em`
    iwsy init
    
    create FileManPanel in Left
    set the style of FileManPanel to `flex:1;display:none;margin-top:0.5em;border-top:1px solid black`
    
    create HelpPanel in Left
    set the style of HelpPanel to `flex:1;display:none;margin-top:0.5em;border-top:1px solid black`

!	The right-hand panel
    create Right in Body
	set the style of Right to `flex:1;height:100%;display:flex;flex-direction:column;overflow:hidden`

	create ContentDiv in Right
    set the style of ContentDiv to `width:100%;height:100%;position:relative`
    
    create Tabs in ContentDiv
    set the style of Tabs to `width:100%;padding:0.5em 0;text-align:center`
    set the elements of SectionButton to 3
    divide 100 by the elements of SectionButton giving N
    create Tab in Tabs
    set the style of Tab to `display:inline-block;width:` cat N cat `%`
    index SectionButton to 0
    create SectionButton in Tab
    set the style of SectionButton to `width:100%;background-color:lightgray`
    set the content of SectionButton to `Steps`
    create StepsPanel in ContentDiv
    set the style of StepsPanel to `position:absolute;left:0;top:2.5em;width:100%;height:calc(100% - 2.5em)`
    create Tab in Tabs
    set the style of Tab to `display:inline-block;width:` cat N cat `%`
    index SectionButton to 1
    create SectionButton in Tab
    set the style of SectionButton to `width:100%;background-color:#eee`
    set the content of SectionButton to `Blocks`
    create BlocksPanel in ContentDiv
    set the style of BlocksPanel to `position:absolute;left:0;top:2.5em;width:100%;height:calc(100% - 2.5em)`
    create Tab in Tabs
    set the style of Tab to `display:inline-block;width:` cat N cat `%`
    index SectionButton to 2
    create SectionButton in Tab
    set the style of SectionButton to `width:100%;background-color:#eee`
    set the content of SectionButton to `Content`
    create ContentPanel in ContentDiv
    set the style of ContentPanel to `position:absolute;left:0;top:2.5em;width:100%;height:calc(100% - 2.5em)`
    
    put 0 into Section
    index SectionButton to 0
    on click SectionButton
    begin
    	put the index of SectionButton into N
        gosub to SelectSection
    end
    
!	Create the file browser
    create Overlay in Body
    set the style of Overlay to
      `position:absolute;top:0;left:0;width:100vw;height:100vh;background:rgba(0,0,0,0.0);display:none`

    create Media in Overlay
    set style of Media to `display:none;width:100%;height:100%;text-align:center`

    create FileListing in Media
    set the style of FileListing to
      `display:none;width:50%;height:75%;margin:auto;background-color:white;`
      cat `padding:2em 2em 3em 2em;text-align:center;position: absolute;top: 50%;left: 50%;`
      cat `transform: translateX(-50%) translateY(-50%)`

    create Scroller in FileListing
    set the style of Scroller to `height:100%;overflow:scroll;text-align:left`
    
    create LowerPanel in FileListing
    
    create CloseButton in LowerPanel
    set the style of CloseButton to `margin-left:2em`
    set the text of CloseButton to `Close`

    put empty into LastSavedState
    put empty into UserRecord
    
    on click New
    begin
    	if Presentation is not LastSavedState
    	begin
			if confirm `Content has changed. Do you want to save it?`
			begin
      			put the content of NameEditor into Name
      			if Name is empty
      			begin
                	gosub to SetStatusRed
        			set the text of Status to `No script name has been given`
        			go to ResetStatus
      			end
    	  		if UserRecord gosub to SavePresentation
      			else put Presentation into storage as Name
            end
    	end
    	clear FileIsOpen
        clear Player
        set the content of NameEditor to empty
        put empty into CurrentScriptName
        gosub to CreateNewPresentation
        iwsy script Presentation
        put Presentation into LastSavedState
    	gosub to UpdateCurrentSection
	end

    on click Open go to DoOpen

    on click Save
    begin
    	gosub to SaveChanges
        put the content of NameEditor into Name
        if Name is empty
        begin
            gosub to SetStatusRed
            set the text of Status to `No script name has been given`
            go to ResetStatus
        end
        if the position of `.json` in Name is -1 put Name cat `.json` into Name
        replace ` ` with `_` in Name
        set the content of NameEditor to Name
        if Name is not CurrentScriptName put empty into LastSavedState
        if Presentation is not LastSavedState
        begin
            if UserRecord
            begin
            	put Presentation into Content
                json format Content
                gosub to SavePresentation
            end
            else put Presentation into storage as Name
            put Presentation into LastSavedState
            gosub to SetStatusGreen
            set the text of Status to `Presentation '` cat Name cat `' saved`
            put Name into CurrentScriptName
            fork to ResetStatus
        end
        else
        begin
            gosub to SetStatusGreen
            set the text of Status to `Nothing has changed`
            fork to ResetStatus
        end
    end
    
    on click Delete
    begin
        put the content of NameEditor into Name
        if Name is empty
        begin
            gosub to SetStatusGreen
            set the text of Status to `Nothing to delete`
            go to ResetStatus
        end
        if confirm `Are you sure you want to delete "` cat Name cat `"?`
        begin
            if UserRecord gosub to DeletePresentation
            else remove Name from storage
            gosub to SetStatusGreen
            set the text of Status to `Script "` cat Name cat `" deleted`
            set the content of NameEditor to empty
            put empty into CurrentScriptName
            put empty into Presentation
            put Presentation into LastSavedState
            go to ResetStatus
        end
    end
    
    on click Gear
    begin
    	if CurrentScriptName
        begin
	        gosub to SetStatusGreen
	        set the text of Status to Protocol cat Domain cat `?` cat UserHome cat `/scripts/` cat CurrentScriptName
            set attribute `title` of Status to `Click text to copy to clipboard`
            on click Status
            begin
            	copy Status
            	on click Status stop
            	set the text of Status to `Address copied`
            	go to ResetStatus
            end
        end
    end
    
    on click FileMan
    begin
    	if Running stop
        if UserRecord is empty stop
    	if FileManModule is not running
        begin
            rest get Script from `/resources/ecs/fileman.txt?v=` cat now
            run Script with FileManPanel as FileManModule
        end
        set style `display` of Player to `none`
        set style `display` of HelpPanel to `none`
        set style `display` of FileManPanel to `block`
        send to FileManModule
    end
    
    on click Help go to ShowHelp    
    on click RunStop go to DoRunStop
    on click FullScreen go to RunFullScreen
    
    on click User
    begin
    	if UserRecord
        begin
        	put empty into UserRecord
            put empty into storage as `.user`
            set attribute `src` of User to `resources/icon/user.png`
            set attribute `title` of User to `Login`
            gosub to SetStatusRed
            set the text of Status to `Not logged in`
            put empty into storage as `user.email`
            put empty into storage as `user.password`
            go to ResetStatus
        end
        else send `login` to UserModule
    end
    
    gosub to CreateNewPresentation
    put Presentation into LastSavedState
    gosub to SetupSteps
    gosub to SetupBlocks
    gosub to SetupContent 
    put 0 into N
    gosub to SelectSection
    clear Running
    iwsy load Player Presentation

   	create UserPanel in Controls
   	rest get Script from `/resources/ecs/user.txt?v=` cat now
    run Script with UserPanel as UserModule
    send to UserModule
    
    on message
    begin
    	put the message into Message
        put property `action` of Message into Action
        if Action is `goto`
        begin
        	if not Running iwsy goto property `index` of Message
        end
        else if Action is `refresh`
        begin
        	iwsy script Presentation
            set style `display` of StepsPanel to `none`
            set style `display` of BlocksPanel to `none`
            set style `display` of ContentPanel to `none`
            if Section is 0 set style `display` of StepsPanel to `block`
            else if Section is 1 set style `display` of BlocksPanel to `block`
            else if Section is 2 set style `display` of ContentPanel to `block`
        end
        else if Action is `block`
        begin
        	set style `display` of FileManPanel to `none`
        	set style `display` of HelpPanel to `none`
        	set style `display` of Player to `block`
        	put property `block` of Message into N
            iwsy block N
        end
        else if Action is `user`
        begin
        	put property `user` of Message into UserRecord
            put UserRecord into storage as `.user`
            put property `home` of UserRecord into UserHome
            put UserHome cat `/` cat property `id` of UserRecord into UserHome
            put property `email` of UserRecord into UserEmail
            get UserPassword from storage as `user.password`
            set attribute `src` of User to `resources/icon/user-loggedin.png`
            set attribute `title` of User to `Logged in as ` cat property `name` of UserRecord
            gosub to SetStatusGreen
            set the text of Status to `Logged in as  '` cat Name cat property `name` of UserRecord cat `'`
            fork to ResetStatus
        end
    end
    
    get Item from storage as `alreadyrun`
    if Item is empty fork to ShowHelp
    
    wait 10 ticks

    put property `arg` of Args into Arg
    if Arg includes `.json`
    begin
        rest get Presentation from `/resources/users/` cat Arg cat `?v=` cat now
        send to StepsModule
        send to BlocksModule
        send to ContentModule
    	iwsy script Presentation
        set style `display` of Player to `block`
		create Mask in Body
        set the style of Mask to `position:absolute;top:0;left:0;width:100%;height:100%;background:black`
        create FSPrompt in Mask
        set the style of FSPrompt to
        	`width:50%;height:50%;position:absolute;left:50%;top:50%;transform:translate(-50%, -50%)`
        set attribute `src` of FSPrompt to `resources/img/fullscreen.png`
        on click FSPrompt go to FullScreenManual
        on key
        begin
            if the key is `Enter` go to FullScreenAuto
            else if the key is `ArrowRight` go to FullScreenManual
            else if the key is ` ` go to FullScreenManual
        end
    end
    else put empty into Arg
    
	stop

FullScreenAuto:
	remove element Mask
	iwsy run fullscreen auto then
    begin
    	clear Running
        on click FSPrompt stop
        on key stop
    end
    set Running
    stop

FullScreenManual:
	remove element Mask
	iwsy run fullscreen manual then
    begin
    	clear Running
        on click FSPrompt stop
        on key stop
    end
    set Running
    stop

ShowHelp:
    if Running stop
    if HelpModule is not running
    begin
        require js
        	`https://cdn.jsdelivr.net/gh/easycoder/easycoder.github.io/dist/plugins/showdown.js?v=` cat now
        rest get Script from `/resources/ecs/help.txt?v=` cat now
        run Script with HelpPanel as HelpModule
    end
    set style `display` of Player to `none`
    set style `display` of FileManPanel to `none`
    set style `display` of HelpPanel to `block`
    send to HelpModule
    stop

SavePresentation:
	rest post Content to `usave/` cat UserEmail cat `/` cat UserPassword cat `/`
    	cat `users/` cat UserHome cat `/scripts/` cat Name
	return

DeletePresentation:
	rest post Content to `udelete/` cat UserEmail cat `/` cat UserPassword cat `/`
    	cat `users/` cat UserHome cat `/scripts/` cat Name
	return

CreateNewPresentation:
    set Presentation to object
    set Content to object
    set property `title` of Content to `Init`
    set property `action` of Content to `init`
    set property `label` of Content to ``
    set property `aspect ratio` of Content to `16:9`
    set property `background` of Content to ``
    set property `border` of Content to `1px solid black`
    set Item to array
    json add Content to Item
    set property `steps` of Presentation to Item
    set Item to array
    set property `blocks` of Presentation to Item
    set property `content` of Presentation to Item
	return

SetupSteps:
    if StepsModule is not running
    begin
    	rest get Script from `/resources/ecs/steps.txt?v=` cat now
        run Script with StepsPanel and Presentation as StepsModule
    end
    return

SetupBlocks:
    if BlocksModule is not running
    begin
    	rest get Script from `/resources/ecs/blocks.txt?v=` cat now
        run Script with BlocksPanel and Presentation as BlocksModule
    end
    return

SetupContent:
    if ContentModule is not running
    begin
    	rest get Script from `/resources/ecs/content.txt?v=` cat now
        run Script with ContentPanel and Presentation as ContentModule
    end
    return

!	Select one of the 3 sections
SelectSection:
	gosub to SaveChanges
    index SectionButton to Section
    set style `background-color` of SectionButton to `#eee`
    put N into Section
    index SectionButton to Section
    set style `background-color` of SectionButton to `lightgray`

!	Update the current section
UpdateCurrentSection:
    set style `display` of StepsPanel to `none`
    set style `display` of BlocksPanel to `none`
    set style `display` of ContentPanel to `none`
    if Section is 0
    begin
    	set style `display` of StepsPanel to `block`
    	send to StepsModule
    end
    else if Section is 1
    begin
    	set style `display` of BlocksPanel to `block`
    	send to BlocksModule
    end
    else if Section is 2
    begin
    	set style `display` of ContentPanel to `block`
    	send to ContentModule
    end
	return

SaveChanges:
    send `save` to StepsModule
	send `save` to BlocksModule
    send `save` to ContentModule
	return

DoOpen:
    clear FileIsOpen
    if Presentation is not LastSavedState
    begin
      if confirm `Content has changed. Do you want to save it?`
      begin
      	if UserRecord rest post Content to `save/` cat `users/` cat UserHome cat `/` cat Name
      	else put Content into storage as Name
      end
    end

  ! Animate the background
    set style `display` of Overlay to `block`
    put 0 into Alpha
    while Alpha is less than 8
    begin
      set style `background-color` of Overlay to `rgba(0,0,0,0.` cat Alpha cat `)`
      wait 4 ticks
      add 1 to Alpha
    end
    wait 10 ticks

  ! Make the browser panel visible
    set style `display` of Media to `block`
    set style `display` of FileListing to `inline-block`

  ! Fill the browser with content from the server
    if UserRecord
    begin
        rest get Files from `ulist/` cat UserEmail cat `/` cat UserPassword cat `/`
        	cat `users/` cat UserHome cat `/scripts`
        put the json count of Files into FileCount
        put empty into Content
        put 0 into N
        while N is less than FileCount
        begin
            put element N of Files into Item
            if property `type` of Item is `json` json add property `name` of Item to Content
            add 1 to N
        end
    end
    else
    begin
    	get Files from storage
	  	put the json count of Files into FileCount
	  	put empty into Content
	  	put 0 into N
	  	while N is less than FileCount
	  	begin
	  		put element N of Files into Item
	    	if left 1 of Item is not `.`
            begin
            	if the position of `.json` in Item is not -1 json add Item to Content
            end
	    	add 1 to N
	  	end
    end
    json sort Content
    put empty into FileList
    put the json count of Content into FileCount
    set the elements of File to FileCount
    set the elements of FileName to FileCount
  ! Add a row for each file
    put 0 into N
    while N is less than FileCount
    begin
      index File to N
      index FileName to N
      put `<div id="ec-file-row-INDEX" style="clear:both;padding:0.25em 0;">`
        cat `<a id="ec-file-name-INDEX" href="#"></a></div>` into File
      replace `INDEX` with N in File
      if N is even replace `ODDEVEN` with `ec-even` in File
      else replace `ODDEVEN` with `ec-odd` in File
      put FileList cat File into FileList
      add 1 to N
    end

    set the content of Scroller to FileList
  ! Add the document names
    put 0 into N
    while N is less than FileCount
    begin
      index File to N
      index FileName to N
      put element N of Content into File
      attach FileRow to `ec-file-row-` cat N
      attach FileName to `ec-file-name-` cat N
      set the content of FileName to File
      if N is even set style `background` of FileRow to `lightgray`
      on click FileName go to SelectFile
      add 1 to N
    end
    on click CloseButton
    begin
      put LastSavedState into Content
      go to CloseBrowser
    end
    stop
    
SelectFile:
    index File to the index of FileName
    set the content of NameEditor to File
    put File into CurrentScriptName
	if UserRecord rest get Presentation from
    	`/resources/users/` cat UserHome cat `/scripts/` cat File cat `?v=` cat now
    else get Presentation from storage as File
    send to StepsModule
    send to BlocksModule
    send to ContentModule
    put Presentation into LastSavedState
    gosub to UpdateCurrentSection
    gosub to SetStatusGreen
    set the text of Status to `Presentation '` cat File cat `' loaded`
    fork to ResetStatus
    set ShowRun
    set style `display` of FileManPanel to `none`
    set style `display` of HelpPanel to `none`
    set style `display` of Player to `block`
    iwsy script Presentation

CloseBrowser:
    set style `background-color` of Overlay to `rgba(0,0,0,0.0)`
    set style `display` of Overlay to `none`
    set style `display` of Media to `none`
    stop

SetStatusRed:
	set style `color` of Status to `red`
	return

SetStatusGreen:
	set style `color` of Status to `green`
	return

ResetStatus:
    wait 2
    set the text of Status to ``
    set attribute `title` of Status to ``
    stop

DoRunStop:
	if Running
    begin
    	clear Running
		gosub to ClearStepsButtons
    	set attribute `src` of RunStop to `resources/icon/run.png`
        iwsy stop
    end
    else
    begin
    	put property `steps` of Presentation into Item
    	if the json count of Item is 1 stop
    	set Running
    	set style `display` of Player to `block`
        set style `display` of FileManPanel to `none`
		gosub to ClearStepsButtons
        set attribute `src` of RunStop to `resources/icon/runstop.png`
        
        put 0 into N
        gosub to SelectSection

        iwsy onstep
        begin
            set Message to object
            set property `action` of Message to `step`
            set property `step` of Message to the step
            send Message to StepsModule
            set Message to object
            set property `action` of Message to `running`
            send Message to StepsModule
        end

		set style `display` of HelpPanel to `none`
		iwsy run then
        begin
			gosub to ClearStepsButtons
    		set attribute `src` of RunStop to `resources/icon/run.png`
            clear Running
            stop
        end
    end
	stop

RunFullScreen:
    put property `steps` of Presentation into Item
    if the json count of Item is 1 stop
	if Running iwsy stop
	else iwsy run fullscreen
    toggle Running
	stop

ClearStepsButtons:
    set Message to object
    set property `action` of Message to `clear`
    send Message to StepsModule
    return