!	IWSY

	script IWSY
    
    div Body
    div Left
    div Right
    div Controls
    div ContentDiv
    div Buttons
    div Tabs
    div Tab
    div ScriptName
    div StepsPanel
    div BlocksPanel
    div ContentPanel
    div Player
    span Status
    span Span
    input NameEditor
    button SectionButton
    img New
    img Open
    img Save
    img RunStop
    img Delete
    a Link
    module StepsModule
    module BlocksModule
    module ContentModule
    variable Mobile
    variable LastSavedState
    variable Content
    variable Script
    variable Presentation
    variable Name
    variable CurrentName
    variable PasswordValid
    variable ShowRun
    variable ReadOnly
    variable PasswordRequested
    variable Password
    variable CallStack
    variable Message
    variable Section
    variable Item
    variable CurrentScriptName
    variable Action
    variable Running
    variable N

  ! The browser
    div Overlay
    div Scroller
    div Media
    div FileListing
    div FileRow
    div LowerPanel
    button CloseButton
    a FileName
    variable Alpha
    variable List
    variable FileList
    variable FileCount
    variable File
    variable Files
    variable FileIsOpen
    
!	Test if site is on a static host
    clear ReadOnly
    rest get List from `_list/scripts`
    or begin
    	print `Static site`
        set ReadOnly
        go to L2
    end
L2:
    clear PasswordRequested
    put empty into CallStack
    history set
    on restore
    begin
        put the json count of CallStack into N
    end
    if portrait
    begin
    	if mobile set Mobile else clear Mobile
    end
    
    set the title to `IWSY`
    create Body
    if Mobile
	    set the style of Body to `width:100%;height:100%`
    else
	    set the style of Body to `width:100%;height:100%;display:flex`

!	The left-hand panel
    create Left in Body
	set the style of Left to `flex:1;height:100%;border-right:1px solid black;margin-right:0.5em`
    
    create Controls in Left
    set the style of Controls to `padding:0 0.5em`

    create Buttons in Controls
    set the style of Buttons to `width:100%;padding:0.5em 0`

    create ScriptName in Controls
    set the style of ScriptName to `display:flex`
    if Mobile set style `display` of ScriptName to `none`
    create Span in ScriptName
    set the style of Span to `flex:15`
    set the content of Span to `Script&nbsp;name:&nbsp;`
    create NameEditor in ScriptName
    set the style of NameEditor to `flex:85;display:inline-block`

    create Link in Buttons
    create New in Link
    set the style of New to `width:40px;margin-right:0.5em`
    set attribute `src` of New to `resources/icon/new.png`
    set attribute `title` of New to `New`
    create Open in Link
    set the style of Open to `width:40px;margin-right:0.5em`
    set attribute `src` of Open to `resources/icon/open.png`
    set attribute `title` of Open to `Open`
    create Link in Buttons
    create Save in Link
    set the style of Save to `width:40px;margin-right:1.5em`
    set attribute `src` of Save to `resources/icon/save.png`
    set attribute `title` of Save to `Save`
    create Link in Buttons
    create Delete in Link
    set the style of Delete to `width:40px;margin-right:1.5em`
    set attribute `src` of Delete to `resources/icon/trash.png`
    set attribute `title` of Delete to `Delete`
    create Link in Buttons
    create RunStop in Link
    set the style of RunStop to `width:40px;margin-right:1.5em`
    set attribute `src` of RunStop to `resources/icon/run.png`
    set attribute `title` of RunStop to `Run`
    
    create Status in Buttons
    if Mobile set the style of Status to `height:1em`
    else set the style of Status to `float:right;margin:0.5em 0 0 0;color:green`
    
    create Player in Left
    set the style of Player to `margin:0.5em`
    iwsy init

!	The right-hand panel
    create Right in Body
	set the style of Right to `flex:1;height:100%;display:flex;flex-direction:column;overflow:hidden`

	create ContentDiv in Right
    set the style of ContentDiv to `width:100%;height:100%;position:relative`
    
    create Tabs in ContentDiv
    set the style of Tabs to `width:100%;padding:0.5em 0;text-align:center`
    set the elements of SectionButton to 3
    divide 100 by the elements of SectionButton giving N
    create Tab in Tabs
    set the style of Tab to `display:inline-block;width:` cat N cat `%`
    index SectionButton to 0
    create SectionButton in Tab
    set the style of SectionButton to `width:100%`
    set the content of SectionButton to `Steps`
    create StepsPanel in ContentDiv
    set the style of StepsPanel to `position:absolute;left:0;top:2.5em;width:100%;height:calc(100% - 2.5em)`
    create Tab in Tabs
    set the style of Tab to `display:inline-block;width:` cat N cat `%`
    index SectionButton to 1
    create SectionButton in Tab
    set the style of SectionButton to `width:100%`
    set the content of SectionButton to `Blocks`
    create BlocksPanel in ContentDiv
    set the style of BlocksPanel to `position:absolute;left:0;top:2.5em;width:100%;height:calc(100% - 2.5em)`
    create Tab in Tabs
    set the style of Tab to `display:inline-block;width:` cat N cat `%`
    index SectionButton to 2
    create SectionButton in Tab
    set the style of SectionButton to `width:100%`
    set the content of SectionButton to `Content`
    create ContentPanel in ContentDiv
    set the style of ContentPanel to `position:absolute;left:0;top:2.5em;width:100%;height:calc(100% - 2.5em)`
    
    put 0 into Section
    index SectionButton to 0
    on click SectionButton
    begin
    	put the index of SectionButton into N
        gosub to SelectSection
    end
    
!	Create the file browser
    create Overlay in Body
    set the style of Overlay to
      `position:absolute;top:0;left:0;width:100vw;height:100vh;background:rgba(0,0,0,0.0);display:none`

    create Media in Overlay
    set style of Media to `display:none;width:100%;height:100%;text-align:center`

    create FileListing in Media
    set the style of FileListing to
      `display:none;width:50%;height:75%;margin:auto;background-color:white;`
      cat `padding:2em 2em 3em 2em;text-align:center;position: absolute;top: 50%;left: 50%;`
      cat `transform: translateX(-50%) translateY(-50%)`

    create Scroller in FileListing
    set the style of Scroller to `height:100%;overflow:scroll;text-align:left`
    
    create LowerPanel in FileListing
    
    create CloseButton in LowerPanel
    set the style of CloseButton to `margin-left:2em`
    set the text of CloseButton to `Close`

    put empty into LastSavedState
    
    on click New
    begin
!    	gosub to StopTestModule
    	if Presentation is not LastSavedState
    	begin
			if confirm `Content has changed. Do you want to save it?`
			begin
      			put the content of NameEditor into Name
      			if Name is empty
      			begin
                	gosub to SetStatusRed
        			set the content of Status to `No script name has been given`
        			go to ResetStatus
      			end
    	  		if PasswordValid rest post Presentation to `_save/json/` cat Name
      			else put Presentation into storage as CurrentName
            end
    	end
    	clear FileIsOpen
        set the content of NameEditor to empty
        put empty into CurrentScriptName
        gosub to CreateNewPresentation
        put Presentation into LastSavedState
    	gosub to UpdateCurrentSection
	end

    on click Open go to DoOpen

    on click Save
    begin
    	gosub to SaveChanges
    	gosub to GetPassword
        put the content of NameEditor into Name
        if Name is empty
        begin
            gosub to SetStatusRed
            set the content of Status to `No script name has been given`
            go to ResetStatus
        end
        if the position of `.json` in Name is -1 put Name cat `.json` into Name
        replace ` ` with `_` in Name
        set the content of NameEditor to Name
        if Name is not CurrentScriptName put empty into LastSavedState
        if Presentation is not LastSavedState
        begin
            if PasswordValid
            begin
            	put Presentation into Content
                json format Content
                rest post Content to `_save/json/` cat Name
            end
            else put Presentation into storage as Name
            put Presentation into LastSavedState
            gosub to SetStatusGreen
            set the content of Status to `Presentation '` cat Name cat `' saved`
            put Name into CurrentScriptName
            fork to ResetStatus
        end
        else
        begin
            gosub to SetStatusGreen
            set the content of Status to `Nothing has changed`
            fork to ResetStatus
        end
    end
    
    on click Delete
    begin
    	gosub to GetPassword
        put the content of NameEditor into Name
        if Name is empty
        begin
            gosub to SetStatusGreen
            set the content of Status to `Nothing to delete`
            go to ResetStatus
        end
        if confirm `Are you sure you want to delete "` cat Name cat `"?`
        begin
            if PasswordValid rest post to `_delete/json/` cat Name
            else remove Name from storage
            gosub to SetStatusGreen
            set the content of Status to `Script "` cat Name cat `" deleted`
            set the content of NameEditor to empty
            put empty into CurrentScriptName
            put empty into Presentation
            put Presentation into LastSavedState
            go to ResetStatus
        end
    end
    
    on click RunStop go to DoRunStop
    
    gosub to CreateNewPresentation
    put Presentation into LastSavedState
    gosub to SetupSteps
    gosub to SetupBlocks
    gosub to SetupContent 
    put 0 into N
    gosub to SelectSection
    clear Running
    iwsy load Player Presentation
    
    on message
    begin
    	put the message into Message
        put property `action` of Message into Action
        if Action is `goto`
        begin
        	if not Running iwsy goto property `index` of Message
        end
        else if Action is `refresh`
        begin
        	iwsy script Presentation
            set style `display` of StepsPanel to `none`
            set style `display` of BlocksPanel to `none`
            set style `display` of ContentPanel to `none`
            if Section is 0 set style `display` of StepsPanel to `block`
            else if Section is 1 set style `display` of BlocksPanel to `block`
            else if Section is 2 set style `display` of ContentPanel to `block`
        end
        else if Action is `block`
        begin
        	put property `block` of Message into N
            iwsy block N
        end
    end
	stop

CreateNewPresentation:
    set Presentation to object
    set Item to array
    set property `steps` of Presentation to Item
    set property `blocks` of Presentation to Item
    set property `content` of Presentation to Item
	return

SetupSteps:
    if StepsModule is not running
    begin
    	rest get Script from `/resources/ecs/steps.txt?v=` cat now
        run Script with StepsPanel and Presentation as StepsModule
    end
    return

SetupBlocks:
    if BlocksModule is not running
    begin
    	rest get Script from `/resources/ecs/blocks.txt?v=` cat now
        run Script with BlocksPanel and Presentation as BlocksModule
    end
    return

SetupContent:
    if ContentModule is not running
    begin
    	rest get Script from `/resources/ecs/content.txt?v=` cat now
        run Script with ContentPanel and Presentation as ContentModule
    end
    return

!	Select one of the 3 sections
SelectSection:
	gosub to SaveChanges
    index SectionButton to Section
    set style `background` of SectionButton to ``
    put N into Section
    index SectionButton to Section
    set style `background` of SectionButton to `lightgray`

!	Update the current section
UpdateCurrentSection:
    set style `display` of StepsPanel to `none`
    set style `display` of BlocksPanel to `none`
    set style `display` of ContentPanel to `none`
    if Section is 0
    begin
    	set style `display` of StepsPanel to `block`
    	send to StepsModule
    end
    else if Section is 1
    begin
    	set style `display` of BlocksPanel to `block`
    	send to BlocksModule
    end
    else if Section is 2
    begin
    	set style `display` of ContentPanel to `block`
    	send to ContentModule
    end
	return

SaveChanges:
    send `save` to StepsModule
	send `save` to BlocksModule
    send `save` to ContentModule
	return

DoOpen:
!	gosub to StopTestModule
    gosub to GetPassword

    clear FileIsOpen
    if Presentation is not LastSavedState
    begin
      if confirm `Content has changed. Do you want to save it?`
      begin
      	if PasswordValid rest post Content to `_save/json/` cat Name
      	else put Content into storage as Name
      end
    end

  ! Animate the background
    set style `display` of Overlay to `block`
    put 0 into Alpha
    while Alpha is less than 8
    begin
      set style `background-color` of Overlay to `rgba(0,0,0,0.` cat Alpha cat `)`
      wait 4 ticks
      add 1 to Alpha
    end
    wait 10 ticks

  ! Make the browser panel visible
    set style `display` of Media to `block`
    set style `display` of FileListing to `inline-block`

  ! Fill the browser with content from the server
    if PasswordValid
    begin
        rest get Files from `_list/json`
        put the json count of Files into FileCount
        put empty into Content
        put 0 into N
        while N is less than FileCount
        begin
            put element N of Files into Item
            if property `type` of Item is `json` json add property `name` of Item to Content
            add 1 to N
        end
    end
    else
    begin
    	get Files from storage
	  	put the json count of Files into FileCount
	  	put empty into Content
	  	put 0 into N
	  	while N is less than FileCount
	  	begin
	  		put element N of Files into Item
	    	if left 1 of Item is not `.` json add Item to Content
	    	add 1 to N
	  	end
    end
    json sort Content
    put empty into FileList
    put the json count of Content into FileCount
    set the elements of File to FileCount
    set the elements of FileName to FileCount
  ! Add a row for each file
    put 0 into N
    while N is less than FileCount
    begin
      index File to N
      index FileName to N
      put `<div id="ec-file-row-INDEX" style="clear:both;padding:0.25em 0;">`
        cat `<a id="ec-file-name-INDEX" href="#"></a></div>` into File
      replace `INDEX` with N in File
      if N is even replace `ODDEVEN` with `ec-even` in File
      else replace `ODDEVEN` with `ec-odd` in File
      put FileList cat File into FileList
      add 1 to N
    end

    set the content of Scroller to FileList
  ! Add the document names
    put 0 into N
    while N is less than FileCount
    begin
      index File to N
      index FileName to N
      put element N of Content into File
      attach FileRow to `ec-file-row-` cat N
      attach FileName to `ec-file-name-` cat N
      set the content of FileName to File
      if N is even set style `background` of FileRow to `lightgray`
      on click FileName go to SelectFile
      add 1 to N
    end
    on click CloseButton
    begin
      put LastSavedState into Content
      go to CloseBrowser
    end
    stop
    
SelectFile:
    index File to the index of FileName
    set the content of NameEditor to File
    put File into CurrentScriptName
	if PasswordValid rest get Presentation from `/resources/json/` cat File cat `?v=` cat now
    else get Presentation from storage as File
    put Presentation into LastSavedState
    gosub to UpdateCurrentSection
    set the content of Status to `Presentation '` cat File cat `' loaded`
    fork to ResetStatus
    set ShowRun
    iwsy load Player Presentation

CloseBrowser:
    set style `background-color` of Overlay to `rgba(0,0,0,0.0)`
    set style `display` of Overlay to `none`
    set style `display` of Media to `none`
    stop

SetStatusRed:
	set style `color` of Status to `red`
	return

SetStatusGreen:
	set style `color` of Status to `green`
	return

ResetStatus:
    wait 2
    set the content of Status to ``
    stop

DoRunStop:
	if Running
    begin
    	clear Running
		gosub to ClearStepsButtons
    	set attribute `src` of RunStop to `resources/icon/run.png`
        iwsy stop
    end
    else
    begin
    	put property `steps` of Presentation into Item
    	if the json count of Item is 0 stop
        put element 0 of Item into Item
        if property `action` of Item is not `init`
        begin
        	alert `The first step of a presentation must be an 'init' action.`
            stop
        end
    	set Running
		gosub to ClearStepsButtons
        set attribute `src` of RunStop to `resources/icon/runstop.png`
        
        put 0 into N
        gosub to SelectSection

        iwsy onstep
        begin
            set Message to object
            set property `action` of Message to `step`
            set property `step` of Message to the step
            send Message to StepsModule
            set Message to object
            set property `action` of Message to `running`
            send Message to StepsModule
        end

		iwsy run then
        begin
			gosub to ClearStepsButtons
    		set attribute `src` of RunStop to `resources/icon/run.png`
            clear Running
            stop
        end
    end
	stop

ClearStepsButtons:
    set Message to object
    set property `action` of Message to `clear`
    send Message to StepsModule
    return

GetPassword:
	if ReadOnly
    begin
    	clear PasswordValid
        return
    end
	if the hostname is `localhost` go to SetPasswordValid
	if the hostname is `127.0.0.1` go to SetPasswordValid
    
	if not PasswordRequested
    begin
	    set PasswordRequested
        if hostname is `localhost` goto SetPasswordValid
        if hostname is `127.0.0.1` goto SetPasswordValid
        get Password from storage as `.password`
	    if Password is empty
        begin
        put `Please provide the admin password` cat newline
            cat `or click OK to use private browser storage.` into Message
        	put prompt Message with `` into Password
        end
        rest get PasswordValid from `_verify/` cat Password
            or begin
                clear PasswordValid
                return
            end
        if PasswordValid is `yes` 
        begin
            put Password into storage as `.password`
        	set PasswordValid
	    end
      else clear PasswordValid
	end
  return

SetPasswordValid:
  set PasswordValid
  return