!	Steps

	script Steps
    
    import div Panel and variable Presentation
    
    div StepsPanel
    div BlockTable
    div BlockRow
    div BlockData
    div Row
    div Row1
    div Cell
    div Editor
    div Title
    button StepButton
    button Header
    button InsertBefore
    button InsertAfter
    table Table
    tr TR
    td TD
    select ActionSelect
    select BlockSelect
    select ContentSelect
    select TargetSelect
    select TransitionSelect
    select ContinueSelect
    input TitleInput
    input LabelInput
    input DurationInput
    input TargetInput
    input URLInput
    img AddStep
    img PlusIcon
    img DeleteIcon
    img DeleteStep
    a Link
    variable Steps
    variable SelectedStep
    variable CurrentStep
    variable PreviousStep
    variable Comment
    variable Action
    variable Blocks
    variable Block
    variable Content
    variable Target
    variable Types
    variable Duration
    variable URL
    variable Names
    variable ActionNames
    variable BlockNames
    variable ContentNames
    variable TransitionTypes
    variable TransitionType
    variable ContinueTypes
    variable TrueFalse
    variable Array
    variable N
    variable B
    
    create StepsPanel in Panel
	set the style of StepsPanel to `flex:1;overflow-y:scroll;margin-top:0.5em`
    
    on message go to Start
    set ready
    stop
    
Start:
	if the message is `save`
    begin
    	stop
    end

	set style `display` of Panel to `flex`
	set style `flex-direction` of Panel to `column`
    
Restart:
	clear StepsPanel
    create Row in StepsPanel
    set the style of Row to `display:flex`
    create Title in Row
    set the style of Title to
    	`flex:1;font-size:110%;font-weight:bold;background:lightgray;text-align:center`
    set the content of Title to `Steps`
    create Cell in Row
    set the style of Cell to `width:1.4em;text-align:center`
    create Link in Cell
    create AddStep in Link
    set the style of AddStep to `width:1em;margin-top:0.1em`
    set attribute `src` of AddStep to `resources/icon/plus.png`
    on click AddStep
    begin
    	gosub to AddNewStep
        go to Restart
    end

	put property `steps` of Presentation into Steps
    put the json count of Steps into N
    set the elements of StepButton to N
    set the elements of DeleteStep to N
    set the elements of Editor to N
    put 0 into N
    while N is less than the elements of StepButton
    begin
    	index StepButton to N
    	create Row in StepsPanel
        set the style of Row to `width:100%`
        create Row1 in Row
        set the style of Row1 to `display:flex;margin:0.2em 0`
    	create StepButton in Row1
        set the style of StepButton to `flex:1`
        put element N of Steps into CurrentStep
        set the text of StepButton to property `comment` of CurrentStep
        create Cell in Row1
        set the style of Cell to `width:1.4em;text-align:center`
        index DeleteStep to N
        create Link in Cell
        create DeleteStep in Link
        set the style of DeleteStep to `width:1em;margin-top:0.1em`
        set attribute `src` of DeleteStep to `resources/icon/stop.png`
        index Editor to N
        create Editor in Row
    	add 1 to N
    end
    on click StepButton
    begin
    	gosub to SaveCurrentStep
    	put SelectedStep into N
        put the index of StepButton into SelectedStep
        if SelectedStep is N
        begin
            index Editor to N
            set style `display` of Editor to `none`
            index StepButton to N
            set style `background` of StepButton to ``
            put -1 into SelectedStep
        end
        else
        begin
            if N is not -1
            begin
                put 0 into N
                while N is less than the elements of StepButton
                begin
                    index Editor to N
                    set style `display` of Editor to `none`
                    index StepButton to N
                    set style `background` of StepButton to ``
                    add 1 to N
                end
            end
            index StepButton to SelectedStep
            set style `background` of StepButton to `lightgray`
            index Editor to SelectedStep
            set style `display` of Editor to `block`
            put element SelectedStep of Steps into CurrentStep
            go to EditStep
      	end
    end
    on click DeleteStep
    begin
    	put the index of DeleteStep into N
        json delete element N of Steps
    	set property `steps` of Presentation to Steps
        go to Restart
    end

!	Set up the fixed lists
    set ActionNames to array
    json add `set content` to ActionNames
    json add `show` to ActionNames
    json add `hide` to ActionNames
    json add `pause` to ActionNames
    json add `hold` to ActionNames
    json add `fade up` to ActionNames
    json add `fade down` to ActionNames
    json add `crossfade` to ActionNames
    json add `transition` to ActionNames
    json add `goto` to ActionNames
    json add `load` to ActionNames
    set TransitionTypes to array
    json add `block position` to TransitionTypes
    json add `block size` to TransitionTypes
    json add `font color` to TransitionTypes
    json add `font size` to TransitionTypes
    set ContinueTypes to array
    json add `true` to ContinueTypes
    json add `false` to ContinueTypes
    
    put -1 into SelectedStep
    put property `steps` of Presentation into Steps
    
    stop

!	Add a new step after the current one
AddNewStep:
    set CurrentStep to object
    set property `comment` of CurrentStep to `New step`
    set property `action` of CurrentStep to ``
    set property `label` of CurrentStep to ``
    json add CurrentStep to Steps
    set property `steps` of Presentation to Steps
    return

!	Edit a single step
EditStep:
	put property `blocks` of Presentation into Blocks
    put property `content` of Presentation into Content
    put the json keys of Blocks into BlockNames
    put the json keys of Content into ContentNames
    put element SelectedStep of Steps into CurrentStep
    put CurrentStep into PreviousStep

    clear Editor
    create Table in Editor

ReloadStepEditor:
    set the style of Table to `width:100%`
    create TR in Table
    create TD in TR
    set the style of TD to `width:6em`
    set the content of TD to `Title:`
    create TD in TR
    create TitleInput in TD
    set the style of TitleInput to `width:100%`
    set the content of TitleInput to property `comment` of CurrentStep
    create TR in Table
    create TD in TR
    set the content of TD to `Action:`
    create TD in TR
    create ActionSelect in TD
    set the style of ActionSelect to `width:100%`
    put property `action` of CurrentStep into Action
    set ActionSelect from ActionNames as Action
    if Action is `set content` gosub to EditSetContent
    else if Action is `show` gosub to EditShow
    else if Action is `hide` gosub to EditHide
    else if Action is `pause` gosub to EditPause
    else if Action is `hold` gosub to EditHold
    else if Action is `fade up` gosub to EditFadeUp
    else if Action is `fade down` gosub to EditFadeDown
    else if Action is `crossfade` gosub to EditCrossfade
    else if Action is `transition` gosub to EditTransition
    else if Action is `goto` gosub to EditGoto
    else if Action is `load` gosub to EditLoad
    else
    begin
    end
    on change ActionSelect
    begin
    	if confirm `Changing the action will remove all step data. Do you want to continue?`
        begin
        	put the selected item in ActionSelect into Action
            gosub to CreateNewAction
            clear Table
            go to ReloadStepEditor
        end
    end
    create TR in Table
    create TD in TR
    set the style of TD to `width:6em`
    set the content of TD to `Label:`
    create TD in TR
    create LabelInput in TD
    set the style of LabelInput to `width:100%`
    set the content of LabelInput to property `label` of CurrentStep
    
!	Add the buttons below the table
    create TR in Table
    create TD in TR
    create TD in TR
    create InsertBefore in TD
    set the style of InsertBefore to `width:50%`
    set the text of InsertBefore to `Add Step Before`
    on click InsertBefore
    begin
    	alert `Insert Before`
    end
    create InsertAfter in TD
    set the style of InsertAfter to `width:50%`
    set the text of InsertAfter to `Add Step After`
    on click InsertAfter
    begin
    	alert `Insert After`
    end
	stop

!	Editors for the various Action types

EditSetContent:
	create TR in Table
    create TD in TR
    set the content of TD to `Blocks:`
    create TD in TR
	create BlockTable in TD
    set the style of BlockTable to `width:100%;border:1px solid gray`
    create BlockRow in BlockTable
    set the style of BlockRow to `display:flex`
    create Header in BlockRow
    set the style of Header to `flex:1`
    set the content of Header to `Blocks`
    create Header in BlockRow
    set the style of Header to `flex:1`
    set the content of Header to `Content`
    create BlockData in BlockRow
    set the style of BlockData to `width:2em;text-align:center`
    create Link in BlockData
    create PlusIcon in Link
    set the style of PlusIcon to `width:1em;margin-top:0.1em`
    set attribute `src` of PlusIcon to `resources/icon/plus.png`
    on click PlusIcon
    begin
    	set Block to object
        set property `block` of Block to empty
        set property `content` of Block to empty
        json add Block to Blocks
        set property `blocks` of CurrentStep to Blocks
        clear Table
        go to ReloadStepEditor
    end
    put property `blocks` of CurrentStep into Blocks
    put the json count of Blocks into N
    set the elements of BlockSelect to N
    set the elements of ContentSelect to N
    set the elements of DeleteIcon to N
	put 0 into B
	while B is less than N
	begin
	   	put element B of Blocks into Block
        create BlockRow in BlockTable
        set the style of BlockRow to `display:flex`
        index BlockSelect to B
        create BlockSelect in BlockRow
        set the style of BlockSelect to `flex:1`
        set BlockSelect from BlockNames as property `block` of Block
        index ContentSelect to B
        create ContentSelect in BlockRow
        set the style of ContentSelect to `flex:1`
        set ContentSelect from ContentNames as property `content` of Block
        create BlockData in BlockRow
        set the style of BlockData to `width:2em;text-align:center`
        index DeleteIcon to B
        create Link in BlockData
        create DeleteIcon in Link
        set the style of DeleteIcon to `width:1em;margin-top:0.1em`
        set attribute `src` of DeleteIcon to `resources/icon/stop.png`
        add 1 to B
    end
    on change BlockSelect
    begin
    	put the index of BlockSelect into N
        put element N of Blocks into Block
        set property `block` of Block to the selected item in BlockSelect
        set element N of Blocks to Block
        set property `blocks` of CurrentStep to Blocks
    end
    on change ContentSelect
    begin
    	put the index of ContentSelect into N
        put element N of Blocks into Block
        set property `content` of Block to the selected item in ContentSelect
        set element N of Blocks to Block
        set property `blocks` of CurrentStep to Blocks
    end
    on click DeleteIcon
    begin
    	put the index of DeleteIcon into N
        json delete element N of Blocks
        set property `blocks` of CurrentStep to Blocks
        clear Table
        go to ReloadStepEditor
    end
	return

EditShow:
EditHide:
	gosub to EditBlockList
	return

EditPause:
EditHold:
    gosub to EditDuration
	return

EditFadeUp:
EditFadeDown:
	gosub to EditBlockList
    gosub to EditDuration
    gosub to EditContinue
	return

EditCrossfade:
	put ContentNames into Names
    gosub to EditBlockAndTarget
	return

EditTransition:
	create TR in Table
    create TD in TR
    set the content of TD to `Types:`
    create TD in TR
	create BlockTable in TD
    set the style of BlockTable to `width:100%;border:1px solid gray`
    create BlockRow in BlockTable
    create BlockRow in BlockTable
    set the style of BlockRow to `display:flex`
    create Header in BlockRow
    set the style of Header to `flex:1`
    set the content of Header to `Transition types`
    create BlockData in BlockRow
    set the style of BlockData to `width:2em;text-align:center`
    create Link in BlockData
    create PlusIcon in Link
    set the style of PlusIcon to `width:1em;margin-top:0.1em`
    set attribute `src` of PlusIcon to `resources/icon/plus.png`
    on click PlusIcon
    begin
        json add empty to Types
        set property `type` of CurrentStep to Types
        clear Table
        go to ReloadStepEditor
    end
    put property `type` of CurrentStep into Types
    put the json count of Types into N
    set the elements of TransitionSelect to N
    set the elements of DeleteIcon to N
    put 0 into B
    while B is less than N
    begin
	   	put element B of Types into TransitionType
        create BlockRow in BlockTable
        set the style of BlockRow to `display:flex`
        index TransitionSelect to B
        create TransitionSelect in BlockRow
        set the style of TransitionSelect to `flex:1;width:100%`
        set TransitionSelect from TransitionTypes as TransitionType
        create BlockData in BlockRow
        set the style of BlockData to `width:2em;text-align:center`
        index DeleteIcon to B
        create Link in BlockData
        create DeleteIcon in Link
        set the style of DeleteIcon to `width:1em;margin-top:0.1em`
        set attribute `src` of DeleteIcon to `resources/icon/stop.png`
    	add 1 to B
    end
    on change TransitionSelect
    begin
    	put the index of TransitionSelect into N
        set element N of Types to the selected item in TransitionSelect
        set property `type` of CurrentStep to Types
    end
    on click DeleteIcon
    begin
    	put the index of DeleteIcon into N
        json delete element N of Types
        set property `type` of CurrentStep to Types
        clear Table
        go to ReloadStepEditor
    end
    put BlockNames into Names
    gosub to EditBlockAndTarget
	return

EditGoto:
    create TR in Table
    create TD in TR
    set the style of TD to `width:6em`
    set the content of TD to `Target:`
    create TD in TR
    create TargetInput in TD
    set the style of TargetInput to `width:100%`
    set the content of TargetInput to property `target` of CurrentStep
	return

EditLoad:
    create TR in Table
    create TD in TR
    set the style of TD to `width:6em`
    set the content of TD to `URL:`
    create TD in TR
    create URLInput in TD
    set the style of URLInput to `width:100%`
    set the content of URLInput to property `url` of CurrentStep
	return

EditBlockList:
	create TR in Table
    create TD in TR
    set the content of TD to `Blocks:`
    create TD in TR
	create BlockTable in TD
    set the style of BlockTable to `width:100%;border:1px solid gray`
    create BlockRow in BlockTable
    set the style of BlockRow to `display:flex`
    create Header in BlockRow
    set the style of Header to `flex:1`
    set the content of Header to `Blocks`
    create BlockData in BlockRow
    set the style of BlockData to `width:2em;text-align:center`
    create Link in BlockData
    create PlusIcon in Link
    set the style of PlusIcon to `width:1em;margin-top:0.1em`
    set attribute `src` of PlusIcon to `resources/icon/plus.png`
    on click PlusIcon
    begin
        json add empty to Blocks
        set property `blocks` of CurrentStep to Blocks
        clear Table
        go to ReloadStepEditor
    end
    put property `blocks` of CurrentStep into Blocks
    put the json count of Blocks into N
    set the elements of BlockSelect to N
    set the elements of DeleteIcon to N
    put 0 into B
    while B is less than N
    begin
	   	put element B of Blocks into Block
        create BlockRow in BlockTable
        set the style of BlockRow to `display:flex`
        index BlockSelect to B
        create BlockSelect in BlockRow
        set the style of BlockSelect to `flex:1`
        set BlockSelect from BlockNames as Block
        create BlockData in BlockRow
        set the style of BlockData to `width:2em;text-align:center`
        index DeleteIcon to B
        create Link in BlockData
        create DeleteIcon in Link
        set the style of DeleteIcon to `width:1em;margin-top:0.1em`
        set attribute `src` of DeleteIcon to `resources/icon/stop.png`
    	add 1 to B
    end
    on change BlockSelect
    begin
    	put the index of BlockSelect into N
        set element N of Blocks to the selected item in BlockSelect
        set property `blocks` of CurrentStep to Blocks
    end
    on click DeleteIcon
    begin
    	put the index of DeleteIcon into N
        json delete element N of Blocks
        set property `blocks` of CurrentStep to Blocks
        clear Table
        go to ReloadStepEditor
    end
    return

EditBlockAndTarget:
	create TR in Table
    create TD in TR
    set the content of TD to `Block:`
    create TD in TR
    set the elements of BlockSelect to 1
    put property `block` of CurrentStep into Block
    create BlockRow in TD
    create BlockSelect in BlockRow
    set the style of BlockSelect to `width:100%`
    set BlockSelect from BlockNames as Block
	create TR in Table
    create TD in TR
    set the content of TD to `Target:`
    create TD in TR
    put property `target` of CurrentStep into Target
    create BlockRow in TD
    create TargetSelect in BlockRow
    set the style of TargetSelect to `width:100%`
    set TargetSelect from Names as Target
    gosub to EditDuration
    gosub to EditContinue
	return

EditDuration:
    create TR in Table
    create TD in TR
    set the style of TD to `width:6em`
    set the content of TD to `Duration:`
    create TD in TR
    create DurationInput in TD
    set the style of DurationInput to `width:100%`
    set the content of DurationInput to property `duration` of CurrentStep
	return

EditContinue:
    create TR in Table
    create TD in TR
    set the style of TD to `width:6em`
    set the content of TD to `Continue:`
    create TD in TR
    create ContinueSelect in TD
    set the style of ContinueSelect to `width:100%`
    put property `continue` of CurrentStep into TrueFalse
    if TrueFalse put `true` into TrueFalse else put `false` into TrueFalse
    set ContinueSelect from ContinueTypes as TrueFalse
	return

!	Create a new action with a full set of empty properties
CreateNewAction:
    set property `comment` of CurrentStep to `New step: ` cat Action
    set property `action` of CurrentStep to Action
    set property `label` of CurrentStep to empty
    if Action is `set content`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of CurrentStep to Blocks
        end
    end
    else if Action is `show`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of CurrentStep to Blocks
        end
    end
 	else if Action is `hide`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to object
            set property `blocks` of CurrentStep to Blocks
        end
    end
	else if Action is `pause`
    begin
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `hold`
    begin
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `fade up`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of CurrentStep to Blocks
        end
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `fade down`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of CurrentStep to Blocks
        end
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `crossfade`
    begin
    	put property `block` of CurrentStep into Block
        if Block is empty set property `block` of CurrentStep to `******`
    	put property `target` of CurrentStep into Target
        if Target is empty set property `target` of CurrentStep to `******`
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `transition`
    begin
    	put property `types` of CurrentStep into Types
        if Types is empty
        begin
        	set Types to array
            set property `types` of CurrentStep to Types
        end
    	put property `target` of CurrentStep into Target
        if Target is empty set property `target` of CurrentStep to `******`
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `goto`
    begin
    	put property `target` of CurrentStep into Target
        if Target is empty set property `target` of CurrentStep to `******`
    end
	else if Action is `load`
    begin
    	put property `url` of CurrentStep into URL
        if URL is empty set property `url` of CurrentStep to `******`
    end
    set element SelectedStep of Steps to CurrentStep
    set property `steps` of Presentation to Steps
	return

!	Save the current step
SaveCurrentStep:
print CurrentStep
	put property `action` of CurrentStep into Action
    if Action is `set content`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of CurrentStep to Blocks
        end
    end
    else if Action is `show`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of CurrentStep to Blocks
        end
    end
 	else if Action is `hide`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to object
            set property `blocks` of CurrentStep to Blocks
        end
    end
	else if Action is `pause`
    begin
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `hold`
    begin
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `fade up`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of CurrentStep to Blocks
        end
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `fade down`
    begin
    	put property `blocks` of CurrentStep into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of CurrentStep to Blocks
        end
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `crossfade`
    begin
    	put property `block` of CurrentStep into Block
        if Block is empty set property `block` of CurrentStep to `******`
    	put property `target` of CurrentStep into Target
        if Target is empty set property `target` of CurrentStep to `******`
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `transition`
    begin
    	put property `types` of CurrentStep into Types
        if Types is empty
        begin
        	set Types to array
            set property `types` of CurrentStep to Types
        end
    	put property `target` of CurrentStep into Target
        if Target is empty set property `target` of CurrentStep to `******`
    	put property `duration` of CurrentStep into Duration
        if Duration is empty set property `duration` of CurrentStep to 1
    end
	else if Action is `goto`
    begin
    	put property `target` of CurrentStep into Target
        if Target is empty set property `target` of CurrentStep to `******`
    end
	else if Action is `load`
    begin
    	put property `url` of CurrentStep into URL
        if URL is empty set property `url` of CurrentStep to `******`
    end
    set element SelectedStep of Steps to CurrentStep
    set property `steps` of Presentation to Steps
	return