!	Steps

	script Steps
    
    import div Panel and variable Presentation
    
    div StepsPanel
    div EditPanel
    div StepsTitle
    div BlockTable
    div BlockRow
    div BlockData
    button Step
    button Save
    button Delete
    button Header
    button InsertBefore
    button InsertAfter
    table Table
    tr TR
    td TD
    select ActionSelect
    select BlockSelect
    select ContentSelect
    input TitleInput
    input LabelInput
    img PlusIcon
    img DeleteIcon
    variable Steps
    variable Comment
    variable Action
    variable Blocks
    variable Block
    variable Content
    variable Target
    variable Types
    variable Duration
    variable URL
    variable Item
    variable ActionNames
    variable BlockNames
    variable ContentNames
    variable N
    variable S
    variable B
    
    create EditPanel in Panel
    set the style of EditPanel to
    	`height:auto;max-height:50%;border:1px solid gray;margin:0.5em 0;padding:1em;overflow-y:scroll`
    
    create StepsTitle in Panel
    set the style of StepsTitle to
    	`font-weight:bold;font-size:110%;background:lightgray;padding:0.2em;text-align:center`
    
    create StepsPanel in Panel
	set the style of StepsPanel to `flex:1;overflow-y:scroll;margin-top:0.5em`
    
    on message go to Start
    set ready
    stop
    
Start:
	set style `display` of Panel to `flex`
	set style `flex-direction` of Panel to `column`
    
	clear EditPanel
	clear StepsPanel
    set the content of StepsTitle to `Steps`
	put property `steps` of Presentation into Steps
    set the elements of Step to the json count of Steps
    put 0 into N
    while N is less than the elements of Step
    begin
    	index Step to N
        dummy
    	create Step in StepsPanel
        set the style of Step to `width:100%;font-size:1.2em;margin:0.2em 0`
        put element N of Steps into Item
        gosub to CheckActionSyntax
        set the text of Step to property `comment` of Item
    	add 1 to N
    end
    on click Step
    begin
    	put the index of Step into S
        put 0 into N
        while N is less than the elements of Step
        begin
        	index Step to N
            set style `background` of Step to ``
            add 1 to N
        end
        put element S of Steps into Item
        index Step to S
        set style `background` of Step to `lightgray`
        go to EditStep
    end
    
    set ActionNames to array
    json add `set content` to ActionNames
    json add `show` to ActionNames
    json add `hide` to ActionNames
    json add `pause` to ActionNames
    json add `hold` to ActionNames
    json add `fade up` to ActionNames
    json add `fade down` to ActionNames
    json add `crossfade` to ActionNames
    json add `transition` to ActionNames
    json add `goto` to ActionNames
    json add `load` to ActionNames
    
    stop

CheckActionSyntax:
    put property `action` of Item into Action
    put property `comment` of Item into Comment
    if Comment is empty set property `comment` of Item to Action
    if Action is `set content`
    begin
    	put property `blocks` of Item into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of Item to Blocks
        end
    end
    else if Action is `show`
    begin
    	put property `blocks` of Item into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of Item to Blocks
        end
    end
 	else if Action is `hide`
    begin
    	put property `blocks` of Item into Blocks
        if Blocks is empty
        begin
        	set Blocks to object
            set property `blocks` of Item to Blocks
        end
    end
	else if Action is `pause`
    begin
    	put property `duration` of Item into Duration
        if Duration is empty set property `duration` of Item to 1
    end
	else if Action is `hold`
    begin
    	put property `duration` of Item into Duration
        if Duration is empty set property `duration` of Item to 1
    end
	else if Action is `fade up`
    begin
    	put property `blocks` of Item into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of Item to Blocks
        end
    	put property `duration` of Item into Duration
        if Duration is empty set property `duration` of Item to 1
    end
	else if Action is `fade down`
    begin
    	put property `blocks` of Item into Blocks
        if Blocks is empty
        begin
        	set Blocks to array
            set property `blocks` of Item to Blocks
        end
    	put property `duration` of Item into Duration
        if Duration is empty set property `duration` of Item to 1
    end
	else if Action is `crossfade`
    begin
    	put property `block` of Item into Block
        if Block is empty set property `block` of Item to `******`
    	put property `target` of Item into Target
        if Target is empty set property `target` of Item to `******`
    	put property `duration` of Item into Duration
        if Duration is empty set property `duration` of Item to 1
    end
	else if Action is `transition`
    begin
    	put property `types` of Item into Types
        if Types is empty
        begin
        	set Types to array
            set property `types` of Item to Types
        end
    	put property `target` of Item into Target
        if Target is empty set property `target` of Item to `******`
    	put property `duration` of Item into Duration
        if Duration is empty set property `duration` of Item to 1
    end
	else if Action is `goto`
    begin
    	put property `target` of Item into Target
        if Target is empty set property `target` of Item to `******`
    end
	else if Action is `load`
    begin
    	put property `url` of Item into URL
        if URL is empty set property `url` of Item to `******`
    end
	return

EditStep:
	put property `blocks` of Presentation into Blocks
    put property `content` of Presentation into Content
    put the json keys of Blocks into BlockNames
    put the json keys of Content into ContentNames

	clear EditPanel
    create Table in EditPanel
    set the style of Table to `width:100%`
    create TR in Table
    create TD in TR
    set the style of TD to `width:6em`
    set the content of TD to `Title:`
    create TD in TR
    create TitleInput in TD
    set the style of TitleInput to `width:100%`
    set the content of TitleInput to property `comment` of Item
    create TR in Table
    create TD in TR
    set the content of TD to `Action:`
    create TD in TR
    create ActionSelect in TD
    set the style of ActionSelect to `width:100%`
    put property `action` of Item into Action
    set ActionSelect from ActionNames as Action
    if Action is `set content` gosub to EditSetContent
    else if Action is `show` gosub to EditShow
    else if Action is `hide` gosub to EditHide
    else if Action is `pause` gosub to EditPause
    else if Action is `hold` gosub to EditHold
    else if Action is `fade up` gosub to EditFadeUp
    else if Action is `fade down` gosub to EditFadeDown
    else if Action is `crossfade` gosub to EditCrossfade
    else if Action is `transition` gosub to EditTransition
    else if Action is `goto` gosub to EditGoto
    else if Action is `load` gosub to EditLoad
    else
    begin
    end
    create TR in Table
    create TD in TR
    set the style of TD to `width:6em`
    set the content of TD to `Label:`
    create TD in TR
    create LabelInput in TD
    set the style of LabelInput to `width:100%`
    set the content of LabelInput to property `label` of Item
    
!	Add the buttons belo the table
    create TR in Table
    create TD in TR
    create TD in TR
    create InsertBefore in TD
    set the style of InsertBefore to `width:10%`
    set the text of InsertBefore to `<+`
    on click InsertBefore
    begin
    	alert `Insert Before`
    end
    create Save in TD
    set the style of Save to `width:40%`
    set the text of Save to `Save`
    on click Save
    begin
    	alert `Save`
    end
    create Delete in TD
    set the style of Delete to `width:40%`
    set the text of Delete to `Delete`
    on click Delete
    begin
    	alert `Delete`
    end
    create InsertAfter in TD
    set the style of InsertAfter to `width:10%`
    set the text of InsertAfter to `+>`
    on click InsertAfter
    begin
    	alert `Insert After`
    end
	stop

EditSetContent:
	create TR in Table
    create TD in TR
    set the content of TD to `Blocks:`
    create TD in TR
    put property `blocks` of Item into Blocks
	create BlockTable in TD
    set the style of BlockTable to `width:100%;border:1px solid gray`
    create BlockRow in BlockTable
    set the style of BlockRow to `display:flex`
    create Header in BlockRow
    set the style of Header to `flex:1`
    set the content of Header to `Block names`
    create Header in BlockRow
    set the style of Header to `flex:1`
    set the content of Header to `Content names`
    create BlockData in BlockRow
    set the style of BlockData to `width:2em;text-align:center`
    create PlusIcon in BlockData
    set the style of PlusIcon to `width:1em;margin-top:0.1em`
    set attribute `src` of PlusIcon to `resources/icon/plus.png`
    put the json count of Blocks into N
    set the elements of BlockSelect to N
    set the elements of ContentSelect to N
    set the elements of DeleteIcon to N
	put 0 into B
	while B is less than N
	begin
	   	put element B of Blocks into Block
        create BlockRow in BlockTable
        set the style of BlockRow to `display:flex`
        index BlockSelect to B
        create BlockSelect in BlockRow
        set the style of BlockSelect to `flex:1`
        set BlockSelect from BlockNames as property `block` of Block
        index ContentSelect to B
        create ContentSelect in BlockRow
        set the style of ContentSelect to `flex:1`
        set ContentSelect from ContentNames as property `content` of Block
        create BlockData in BlockRow
        set the style of BlockData to `width:2em;text-align:center`
        index DeleteIcon to B
        create DeleteIcon in BlockData
        set the style of DeleteIcon to `width:1em;margin-top:0.1em`
        set attribute `src` of DeleteIcon to `resources/icon/stop.png`
        add 1 to B
    end
	return

EditShow:
EditHide:
	return

EditPause:
EditHold:
	return

EditFadeUp:
EditFadeDown:
	return

EditCrossfade:
	return

EditTransition:
	return

EditGoto:
	return

EditLoad:
	return

EditBlockList:
    return