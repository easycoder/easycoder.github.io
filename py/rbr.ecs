!	RBR

	file File
	variable Path
	variable Map
	variable NewMap
	variable Rooms
	variable Room
	variable RoomNumber
	variable Override
	variable Sensors
	variable Sensor
	variable Relays
	variable Relay
	variable Temperature
	variable Events
	variable Event
	variable Until
	variable Target
	variable Value
	variable Now
	variable Boundary
	variable Turn
	variable MAC
	variable Password
	variable URL
	variable E
	variable L
	variable P
	variable R

	script RBR
!	debug step

!	put `/home/graham/Dropbox/Code/VisualStudio/EasyCoder/easycoder.github.io/py` into Path
    put `.` into Path

    put empty into Sensors
    open File Path cat `/mac` for reading
    read MAC from File
    close File

	if file Path cat `/map` exists
	begin
        open File Path cat `/map` for reading
        read Map from File
        close File
        put property `rooms` of Map into Rooms
        put 0 into RoomNumber
        while RoomNumber is less than the count of Rooms
        begin
            put element RoomNumber of Rooms into Room
            gosub to ProcessRoom
            add 1 to RoomNumber
        end
    end

!   Report to the website
    if file Path cat `/password` exists
    begin
		put stringify Sensors into Sensors
        open File Path cat `/password` for reading
        read Password from File
        close File
        print `Get the map`
		put `https://rbr.easycoder.software/rest.php/update/`
			cat MAC cat `/` cat Password cat `/` cat Sensors into URL
        get NewMap from URL
        if NewMap is not stringify Map
        begin
            print `Map updated`
            open File Path cat `/map` for writing
            write NewMap to File
            close File
        end
    end
    else
    begin
        get Password from `https://rbr.easycoder.software/rest.php/register/` cat MAC
        open File Path cat `/password` for writing
        write Password to File
        close File
        print Password
    end
	exit

ProcessRoom:
	put property `sensor` of Room into  Sensor
	open File Path cat `/sensors/` cat Sensor cat `/value.txt` for reading
	read Value from File
	close File
	set property Sensor of Sensors to Value
	put the position of ` ` in Value into P
	put float left P of Value into Temperature
	put property `relays` of Room into Relays
	put property `events` of Room into Events
	take 1 from the length of Events giving L

    ! Deal with overrides
    put property `override` of Room into Override
    if Override is `on` go to TurnOn
    else if Override is `off` go to TurnOff

	! Check each of the events
	put 0 into E
	while E is less than the length of Events
	begin
		put element E of Events into Event
		put property `until` of Event into Until
		put float property `temp` of Event into Target
		put the timestamp into Now
		put the timestamp of Until format `%H:%M` into Boundary
		! Check if this is the right time segment
		if Now is less than Boundary
		begin
            print `Period ` cat E cat `: ` cat Event cat ` `  cat Temperature
            if Temperature is less than Target go to TurnOn else go to TurnOff
		end
		else
		begin
            if E is L
            begin
                put element 0 of Events into Event
                put float property `temp` of Event into Target
                if Temperature is less than Target go to TurnOn
            end
		end
		add 1 to E
	end

TurnOff:
	print `Turn off`
	put `off` into Turn
	go to SetRelays

TurnOn:
	print `Turn on`
	put `on` into Turn

SetRelays:
	put 0 into R
	while R is less than the count of Relays
	begin
		put element R of Relays into Relay
		post to `http://` cat Relay cat `/relay/0?turn=` cat Turn
		add 1 to R
	end
	return
