<h1 style="text-align:center"><strong><span style="color:#660000"><span style="font-family:Courier New,Courier,monospace">E</span></span><span style="color:#000099"><span style="font-family:Courier New,Courier,monospace">asy</span></span><span style="color:#660000"><span style="font-family:Courier New,Courier,monospace">C</span></span><span style="color:#000099"><span style="font-family:Courier New,Courier,monospace">oder</span></span></strong> Tools and Techniques</h1><p>To deploy an <span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">E</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">asy</span></strong></span><span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">C</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">oder</span></strong></span> script you need to embed it in a web page. The basic mechanism is described in our <a data-file="install" href="#" id="page-other-0">install page</a> but other topics need to be covered as well.</p><h2>Plugins</h2><p>The standard <span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">E</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">asy</span></strong></span><span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">C</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">oder</span></strong></span> language includes a wide range of general-purpose programming constructs needed by any language; variables, values, conditionals, strings, numbers and so on. Everything else is provided by plugins. Some of these, notably browser features, JSON and REST, are loaded automatically (though this behavior can be changed if necessary) and several more are available as optional plugins. Plugins add commands to the language and must be loaded before any script that makes use of those keywords will compile.</p><p>The mechanism for requesting a plugin is very simple. Suppose you want to include a Google Map in your web page. You will need the <span style="color:#660000"><span style="font-family:Courier New,Courier,monospace">gmap</span></span> plugin, which is loaded like this:</p><p><span style="color:#660000"><span style="font-family:Courier New,Courier,monospace">load plugin `gmap`</span></span></p><p>Once this is done, any script that includes map commands can be loaded and compiled, as in</p><p><span style="color:#660000"><span style="font-family:Courier New,Courier,monospace">rest get Script from `/resources/scripts/mymapscript`<br />run Script</span></span></p><p>(This is the simplest form, that assumes you don&#39;t need to communicate with the script once it&#39;s running.)</p><p>As you can see, when plugins are used in this way the code you want to run must be in a separate script that&#39;s loaded and run after the plugin is ready. An alternative to this is to declare the plugin globally at the point <span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">E</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">asy</span></strong></span><span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">C</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">oder</span></strong></span> starts up. In the top-level <span style="color:#660000"><span style="font-family:Courier New,Courier,monospace">easycoder</span></span> folder is a file called <span style="color:#660000"><span style="font-family:Courier New,Courier,monospace">plugins.js</span></span>, which allows you to specify which plugins should be loaded at startup and which will be available to load on demand.</p><h2>Writing your own plugins</h2><p>In many projects there is functionality that&#39;s specific to the project, that may be clumsy to implement each time it&#39;s needed and which is better put into a library. <span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">E</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">asy</span></strong></span><span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">C</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">oder</span></strong></span> doesn&#39;t use libraries <em>per se</em>; instead, it encourages you to add new vocabulary and syntax to the language, in the same way as is done in human languages.</p><p>Code of this kind goes into plugins. The way it works is you decide on the extra vocabulary and syntax you need, then you create a new plugin that implements the new features. For any competent programmer it&#39;s quite easy to do once you understand the structure of a plugin, which is best done by studying the existing ones. Since you already know what they do it&#39;s not hard to see how they do it. Anyone who would like help in this area can contact us in <a href="https://join.slack.com/t/easycoder-software/shared_invite/enQtNTU5ODEwOTQ5NTU0LWQ1NWVkOTUxOGQ3NzJmNDI1ZGRlOTdmMjc1NDAxMGIwMTFjODg1ZDJhODEzMzUzODc2MDNlZWU4NmYyZWRlOWI">our Slack channel</a>.</p><p>When you add a new plugin, keep it somewhere outside the <span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">E</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">asy</span></strong></span><span style="color:#660000"><strong><span style="font-family:Courier New,Courier,monospace">C</span></strong></span><span style="color:#000099"><strong><span style="font-family:Courier New,Courier,monospace">oder</span></strong></span> folder hierarchy, which is liable to be overwritten when an update to the language is released.</p>