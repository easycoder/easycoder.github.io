! Embedded demo

  script EmbeddedDemo
  div Container
  svg Stage
  circle Dial
  circle Blob1
  circle Blob2
  rect Button
  line Line
  variable Width
  variable B
  variable A
  variable R
  variable X
  variable Y
  variable Red
  variable Yellow
  variable Green
  variable Position

  create Container

  if mobile
  begin
    set style `width` of Container to `100%`
  end
  else
  begin
    set style `width` of Container to `256px`
  end
  set style `height` of Container to `320px`

  create Stage in Container

  set the elements of Button to 3

  put 100 into R

  create Dial in Stage
    style `cx:128;cy:120;r:` cat R cat `;fill:ivory;stroke:blue;stroke-width:5`

  create Line in Stage
    style `x1:128;x2:128;y1:120;y2:20;stroke:rgb(100,50,0);stroke-width:3`

  create Blob1 in Stage
    style `cx:128;cy:120;r:10;fill:rgb(100,50,0`

  create Blob2 in Stage
    style `cx:128;cy:20;r:10;fill:rgb(100,50,0`

  index Button to 0
  create Button in Stage
    style `x:40;y:250;width:50;height:50;fill:#800000;stroke:#808000;stroke-width:3`

  index Button to 1
  create Button in Stage
    style `x:103;y:250;width:50;height:50;fill:#808000;stroke:#808000;stroke-width:3`

  index Button to 2
  create Button in Stage
    style `x:166;y:250;width:50;height:50;fill:#008000;stroke:#808000;stroke-width:3`

  clear Red
  clear Yellow
  clear Green

  on click Button
  begin
    put the index of Button into B
    if B is 0
    begin
      if Red
      begin
         set attribute `fill` of Button to `#800000`
         clear Red
      end
      else
      begin
         set attribute `fill` of Button to `#ff0000`
         set Red
      end
    end
    else if B is 1
    begin
      if Yellow
      begin
         set attribute `fill` of Button to `#808000`
         clear Yellow
      end
      else
      begin
         set attribute `fill` of Button to `#ffff00`
         set Yellow
      end
    end
    else if B is 2
    begin
      if Green
      begin
         set attribute `fill` of Button to `#008000`
         clear Green
      end
      else
      begin
         set attribute `fill` of Button to `#00ff00`
         set Green
      end
    end
  end

  wait 3
! This section only works if a real system is connected
! It reads the shaft encoder at regular intervals
  while true
  begin
    wait 30 ticks
    rest get Position from `http://192.168.43.41:5000`
    alert Position
    stop
    rest get Position from
    	`http://192.168.43.41:5000/path/{"keyword":"position","channel":32}`
    multiply Position by 360 giving A
    divide A by 64
    if A is greater than 360 take 360 from A
    if A is less than 0 add 360 to A
    gosub to SetPointer
  end
  stop

! This section is just for the demo
! It's a continuous loop that rotates the pointer through 360 degrees
Loop:
  put 0 into A
  while A is less than 360
  begin
    gosub to SetPointer
    wait 1 tick
    add 1 to A
  end
  go to Loop

SetPointer:
  put 128 into X
  add sin A radius R to X
  put 120 into Y
  take cos A radius R from Y
  set attribute `x2` of Line to X
  set attribute `y2` of Line to Y
  move Blob2 to X Y
  return