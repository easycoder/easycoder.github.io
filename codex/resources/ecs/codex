!	EasyCoder Codex

    script Codex

	div Body
    div Screen
    div CodePanel
    div NonCodePanel
    div RunPanel
    div HelpOuter
    div HelpInner
    div HelpPanel
    div ReferencePanel
    div Container
    div Controls
    div Buttons
    div HelpButtons
    div ScriptName
    div ContentDiv
    div Clear
    div Code
    input NameEditor
    textarea ContentEditor
    span Status
    span Span
    img New
    img Open
    img Save
    img RunStop
    img Delete
    img Cycle
    img Back
    img Forward
    img Banner
    img Reference
    img Tools
    img Contents
    a Copy
    a Next
    a Link
    a Index
    module TestModule
    variable Password
    variable PasswordRequested
    variable PasswordValid
    variable Name
    variable CurrentName
    variable Content
    variable Current
    variable Pages
    variable Page
    variable Script
    variable List
    variable Fragment
    variable Mobile
    variable Running
    variable View
    variable Step
    variable Message
    variable ShowRun
    variable A
    variable B
    variable V

  ! The browser
    div Overlay
    div Scroller
    div Media
    div FileListing
    div FileRow
    div LowerPanel
    button CloseButton
    a FileName
    variable Alpha
    variable FileList
    variable FileCount
    variable File
    variable Files
    variable N
    variable FileIsOpen
    variable Item
    variable Items
    
!    create Tracer
!    set attribute `id` of Tracer to `easycoder-tracer`

    clear PasswordRequested
    
    if portrait
    begin
    	if mobile set Mobile else clear Mobile
    end
!    set Mobile
    set ShowRun
    
    load plugin `svg`
    
    codemirror init basic profile `/easycoder/plugins/codemirror-ecs.js`
    require css `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.46.0/addon/dialog/dialog.css`
    require js `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.46.0/addon/dialog/dialog.js`
    require js `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.46.0/addon/search/search.js`
    require js `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.46.0/addon/search/searchcursor.js`
    require js `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.46.0/addon/search/jump-to-line.js`
    
    set the title to `EasyCoder Codex`
    
    rest get Pages from `_load/ecs~pages`

    get Step from storage as `.step`
    if left 4 of Step is not `step`
    begin
    	put `step0` into Step
        put Step into storage as `.step`
    end
    
    create Body
    if Mobile
	    set the style of Body to `width:100%;height:100%`
    else
	    set the style of Body to `width:100%;height:100%;display:flex`

    create Screen in Body    
    create Container in Screen
	set the style of Container to `width:100%;height:100%;display:flex;flex-direction: column`
    
    create Controls in Container
    set the style of Controls to `flex:5em`

    create Buttons in Controls
    set the style of Buttons to `width:100%;padding:0.5em`

    create Link in Buttons
    create New in Link
    set the style of New to `width:40px;margin-right:0.5em`
    set attribute `src` of New to `resources/icon/new.png`
    set attribute `title` of New to `New`
    create Open in Link
    set the style of Open to `width:40px;margin-right:0.5em`
    set attribute `src` of Open to `resources/icon/open.png`
    set attribute `title` of Open to `Open`
    create Link in Buttons
    create Save in Link
    set the style of Save to `width:40px;margin-right:1.5em`
    set attribute `src` of Save to `resources/icon/save.png`
    set attribute `title` of Save to `Save`
    create Link in Buttons
    create Delete in Link
    set the style of Delete to `width:40px;margin-right:1.5em`
    set attribute `src` of Delete to `resources/icon/trash.png`
    set attribute `title` of Delete to `Delete`
    create Link in Buttons
    create RunStop in Link
    set the style of RunStop to `width:40px;margin-right:1.5em`
    set attribute `src` of RunStop to `resources/icon/run.png`
    set attribute `title` of RunStop to `Run`
   	create Link in Buttons
   	create Cycle in Link
   	set the style of Cycle to `width:40px`
   	set attribute `src` of Cycle to `resources/icon/cycle.png`
   	set attribute `title` of Cycle to `Cycle screens`

    create Status in Buttons
    if Mobile set the style of Status to `height:1em;color:green`
    else set the style of Status to `float:right;margin:0.5em 2em 0 0;color:green`

    create ScriptName in Controls
    set the style of ScriptName to `display:flex;margin:0.5em 0;padding:0.5em`
    if Mobile set style `display` of ScriptName to `none`
    create Span in ScriptName
    set the style of Span to `flex:15`
    set the content of Span to `Script&nbsp;name:&nbsp;`
    create NameEditor in ScriptName
    set the style of NameEditor to `flex:85;display:inline-block`

	create ContentDiv in Container
    set the style of ContentDiv to `flex:1`
    if Mobile
    begin
    	set the style of ContentDiv to
        	`position:relative;width:100%;height:100%;overflow-x:scroll;overflow-y:hidden`
	end
    else
    begin
    	set the style of ContentDiv to `width:100%;height:100%;overflow-x:scroll;overflow-y:hidden`
	end

   	create CodePanel in ContentDiv
   	create ContentEditor in CodePanel
	set the style of ContentEditor to `width:100%;height:100%;border:none`
    
	codemirror attach to ContentEditor
    set FileIsOpen

    if Mobile
    begin
        set the style of CodePanel to `display:none`
        create NonCodePanel in ContentDiv
	    create RunPanel in NonCodePanel
    	set the style of RunPanel to `display:none`

		create HelpOuter in NonCodePanel
        set the style of HelpOuter to `width:100%;height:100%;overflow-y:scroll`
    end
    else
    begin
		set the style of Screen to `flex:50;height:100%;overflow:hidden;border:1px solid gray`
	    create RunPanel in Body
    	set the style of RunPanel to `display:none;flex:50;margin-left:1em;border:1px solid gray`

		create HelpOuter in Body
    	set the style of HelpOuter to
        	`flex:50;margin-left:1em;`
            cat `border:1px solid gray;padding:0 0.5em;overflow-y:scroll`
    end

    create Banner in HelpOuter
    set the style of Banner to `width:100%`
    set attribute `src` of Banner to `resources/img/banner.png`
    
    create HelpButtons in HelpOuter
    set the style of HelpButtons to `text-align:center;height:40px`
    create Link in HelpButtons
    create Back in Link
       set the style of Back to `width:40px`
    set attribute `src` of Back to `resources/icon/arrow-back.png`
    set attribute `title` of Back to `Previous step`
    create Link in HelpButtons
    create Forward in Link
       set the style of Forward to `margin-left:1em;width:40px`
    set attribute `src` of Forward to `resources/icon/arrow-forward.png`
    set attribute `title` of Forward to `Next step`
    create Contents in HelpButtons
    create Contents in Link
    set the style of Contents to `margin-left:1em;width:40px`
    set attribute `src` of Contents to `resources/icon/list.png`
    set attribute `title` of Contents to `Contents`
    create Link in HelpButtons
    create Reference in Link
    set the style of Reference to `margin-left:1em;width:40px`
    set attribute `src` of Reference to `resources/icon/book.png`
    set attribute `title` of Reference to `Programmer's Reference`
    create Link in HelpButtons
    create Tools in Link
    set the style of Tools to `margin-left:1em;width:40px`
    set attribute `src` of Tools to `resources/icon/tools.png`
    set attribute `title` of Tools to `Tools`
    
    create HelpInner in HelpOuter
    set the style of HelpInner to `width:100%;line-height:1.5em`

	create HelpPanel in HelpInner
    set the style of HelpPanel to `display:none;width:100%;height:100%`
	create ReferencePanel in HelpInner
    set the style of ReferencePanel to `display:none;width:100%;height:100%`

	gosub to ShowHelpPage
	rest get Script from `_load/ecs~docman`
    run Script with ReferencePanel

	get Item from storage as `.ref`
    if Item
    begin
	    set style `display` of ReferencePanel to `block`
        set style `display` of HelpButtons to `none`
    end
    else set style `display` of HelpPanel to `block`

	on click Back go to StepBack
	on click Forward go to StepForward
    on click Contents go to ShowContents
	on click Reference
    begin
	    set style `display` of ReferencePanel to `block`
        set style `display` of HelpPanel to `none`
        set style `display` of HelpButtons to `none`
        put `y` into storage as `.ref`
    	set the title to `Codex Reference`
    end
	on click Tools
    begin
    	put `tools` into Step
		gosub to SHP2
    	set the title to `Codex Tools`
    end
    
    on message
    begin
    	put the message into Message
    	if Message is `next` go to StepForward
        if Message is `tutorial`
        begin
		    set style `display` of ReferencePanel to `none`
	        set style `display` of HelpPanel to `block`
	        set style `display` of HelpButtons to `block`
	        put empty into storage as `.ref`
    		set the title to `Codex - ` cat File
        end
    end
    
    on error
    begin
    	gosub to StopTestModule
        clear Running
        set attribute `src` of RunStop to `resources/icon/run.png`
    end
   
    create Overlay in Body
    set the style of Overlay to
      `position:absolute;top:0;left:0;width:100vw;height:100vh;background:rgba(0,0,0,0.0);display:none`

    create Media in Overlay
    set style of Media to `display:none;width:100%;height:100%;text-align:center`

    create FileListing in Media
    set the style of FileListing to
      `display:none;width:50%;height:75%;margin:auto;background-color:white;`
      cat `padding:2em 2em 3em 2em;text-align:center;position: absolute;top: 50%;left: 50%;`
      cat `transform: translateX(-50%) translateY(-50%)`

    create Scroller in FileListing
    set the style of Scroller to `height:100%;overflow:scroll;text-align:left`
    
    create LowerPanel in FileListing
    
    create CloseButton in LowerPanel
    set the style of CloseButton to `margin-left:2em`
    set the text of CloseButton to `Close`

    put empty into Current
    
    on click New
    begin
    	gosub to StopTestModule
    	if Mobile
        begin
	    	put `code` into View
        	gosub to SetView
		end
        codemirror close ContentEditor
    	put the content of ContentEditor into Content
    	if Content is not Current
    	begin
			if confirm `Content has changed. Do you want to save it?`
			begin
      			put the content of NameEditor into Name
      			if Name is empty
      			begin
        			set the content of Status to `No script name has been given`
        			go to ResetStatus
      			end
    	  		if PasswordValid rest post Content to `_save/scripts~` cat Name
      			else put Content into storage as CurrentName
            end
    	end
    	clear FileIsOpen
        put empty into File
        set the content of ContentEditor to empty
      	codemirror attach to ContentEditor
        set the content of NameEditor to empty
        put empty into Content
        put Content into Current
    	set the title to `Codex`
	end

    on click Save
    begin
    	gosub to GetPassword
        put the content of NameEditor into Name
        if Name is empty
        begin
            set the content of Status to `No script name has been given`
            go to ResetStatus
        end
        replace ` ` with `_` in Name
        codemirror close ContentEditor
        put the content of ContentEditor into Content
        codemirror attach to ContentEditor
        if Content is not Current
        begin
            if PasswordValid rest post Content to `_save/scripts~` cat Name
            else put Content into storage as Name
            put Content into Current
            set the content of Status to `Script '` cat Name cat `' saved`
            fork to ResetStatus
        end
        else
        begin
            set the content of Status to `Nothing has changed`
            fork to ResetStatus
        end
    end
    
    on click Delete
    begin
    	gosub to GetPassword
        put the content of NameEditor into Name
        if Name is empty
        begin
            alert `Nothing to delete.`
            stop
        end
        if confirm `Are you sure you want to delete "` cat Name cat `"?`
        begin
            codemirror close ContentEditor
            set the content of ContentEditor to empty
            codemirror attach to ContentEditor
            if PasswordValid rest post Content to `_delete/scripts~` cat Name
            else remove Name from storage
            set the content of Status to `Script "` cat Name cat `" deleted`
            set the content of NameEditor to empty
            put empty into Content
            put Content into Current
            go to ResetStatus
        end
    end
    
    clear Running
    put `help` into View

    on click Open go to DoOpen
    on click RunStop go to DoRunStop
    
    on click Cycle
    begin
    	if Mobile
        begin
    		if View is `help`
            begin
            	put `code` into View
            end
        	else if View is `code`
        	begin
        		if Running put `run` into View
            	else put `help` into View
        	end
        	else if View is `run` put `help` into View
        	goto SetView
        end
        else
        begin
    		if View is `help`
            begin
            	if Running
                begin
	            	set style `display` of RunPanel to `block`
    	        	set style `display` of HelpOuter to `none`
        	    	put `run` into View
    				set the title to `Running ` cat File
                end
    			else set the title to `Codex - ` cat File
            end
        	else
            begin
            	set style `display` of RunPanel to `none`
            	set style `display` of HelpOuter to `block`
            	put `help` into View
    			set the title to `Tutorial`
            end
        end
    end
    stop

DoOpen:
	gosub to StopTestModule
    gosub to GetPassword

    if Mobile
    begin
    	put `code` into View
    	gosub to SetView
    end
	codemirror close ContentEditor
    clear FileIsOpen
    put the content of ContentEditor into Content
    if Content is not Current
    begin
      if confirm `Content has changed. Do you want to save it?`
      begin
      	if PasswordValid rest post Content to `_save/scripts~` cat Name
      	else put Content into storage as Name
      end
    end

  ! Animate the background
    set style `display` of Overlay to `block`
    put 0 into Alpha
    while Alpha is less than 8
    begin
      set style `background-color` of Overlay to `rgba(0,0,0,0.` cat Alpha cat `)`
      wait 4 ticks
      add 1 to Alpha
    end
    wait 10 ticks

  ! Make the browser panel visible
    set style `display` of Media to `block`
    set style `display` of FileListing to `inline-block`

  ! Fill the browser with content from the server
    if PasswordValid
    begin
        rest get Files from `_list/scripts`
        put the json count of Files into FileCount
        put empty into Content
        put 0 into N
        while N is less than FileCount
        begin
            put element N of Files into Item
            if property `type` of Item is `file` json add property `name` of Item to Content
            add 1 to N
        end
    end
    else
    begin
    	get Files from storage
	  	put the json count of Files into FileCount
	  	put empty into Content
	  	put 0 into N
	  	while N is less than FileCount
	  	begin
	  		put element N of Files into Item
	    	if left 1 of Item is not `.` json add Item to Content
	    	add 1 to N
	  	end
    end
    json sort Content
    put empty into FileList
    put the json count of Content into FileCount
    set the elements of File to FileCount
    set the elements of FileName to FileCount
  ! Add a row for each file
    put 0 into N
    while N is less than FileCount
    begin
      index File to N
      index FileName to N
      put `<div id="ec-file-row-INDEX" style="clear:both;padding:0.25em 0;">`
        cat `<a id="ec-file-name-INDEX" href="#"></a></div>` into File
      replace `INDEX` with N in File
      if N is even replace `ODDEVEN` with `ec-even` in File
      else replace `ODDEVEN` with `ec-odd` in File
      put FileList cat File into FileList
      add 1 to N
    end

    set the content of Scroller to FileList
  ! Add the document names
    put 0 into N
    while N is less than FileCount
    begin
      index File to N
      index FileName to N
      put element N of Content into File
      attach FileRow to `ec-file-row-` cat N
      attach FileName to `ec-file-name-` cat N
      set the content of FileName to File
      if N is even set style `background` of FileRow to `lightgray`
      on click FileName go to SelectFile
      add 1 to N
    end
    on click CloseButton
    begin
      put Current into Content
      go to CloseBrowser
    end
    stop
    
SelectFile:
    index File to the index of FileName
    set the content of NameEditor to File
	if PasswordValid rest get Content from `_load/scripts~` cat File
    else get Content from storage as File
    put Content into Current
    set the content of Status to `Script '` cat File cat `' loaded`
    fork to ResetStatus
    set the title to `Codex - ` cat File
    set ShowRun

CloseBrowser:
    set style `background-color` of Overlay to `rgba(0,0,0,0.0)`
    set style `display` of Overlay to `none`
    set style `display` of Media to `none`
    codemirror attach to ContentEditor
    codemirror set content of ContentEditor to Content
    stop

SetView:
	if View is `code`
    begin
    	set style `display` of CodePanel to `block`
    	set style `display` of NonCodePanel to `none`
        set style `display` of ScriptName to `block`
        codemirror attach to ContentEditor
    end
	else if View is `run`
    begin        
    	set style `display` of CodePanel to `none`
    	set style `display` of NonCodePanel to `block`
    	set style `display` of RunPanel to `block`
    	set style `display` of HelpOuter to `none`
        set style `display` of ScriptName to `none`
    end
	else if View is `help`
    begin     
    	set style `display` of CodePanel to `none`
    	set style `display` of NonCodePanel to `block`
    	set style `display` of RunPanel to `none`
    	set style `display` of HelpOuter to `block`
        set style `display` of ScriptName to `none`
    end
	return

ResetStatus:
    wait 2
    set the content of Status to ``
    stop

ShowContents:
	put `contents` into Step
	gosub to SHP2
    stop

ShowHelpPage:
	put Step into storage as `.step`
SHP2:
    put property Step of Pages into Page
    if property `prev` of Page is empty set style `visibility` of Back to `hidden`
    else set style `visibility` of Back to `visible`
    if property `next` of Page is empty set style `visibility` of Forward to `hidden`
    else set style `visibility` of Forward to `visible`

    if Step is `contents`
    begin
    	put empty into List
        put the json keys of Pages into Items
        put 0 into N
        while N is less than the json count of Items
        begin
            put element N of Items into Item
            put property Item of Pages into Item
            if property `index` of Item is greater than 0 append Item to List
            add 1 to N
        end
        sort List with ListSorter
    	put `<h1>Contents</h1>` into Script
        put 0 into N
        while N is less than the json count of List
        begin
        	put element N of List into Item
            if property `title` of Item is `gap` put Script cat `<br>` into Script
            else
            begin
	            put Script cat `<a id="list-` cat N cat `" href="#" data-file="` cat property `file` of Item into Script
	            put Script cat `">` cat property `title` of Item into Script
	            put Script cat `</a><br>` into Script
            end
            add 1 to N
        end
    end
    else
    begin
    	rest get Script from `_load/html~` cat Step
    end
    set the content of HelpPanel to Script
    if Step is `contents`
    begin
        set the elements of Index to the json count of List
        put 0 into N
        while N is less than the json count of List
        begin
        	index Index to N
        	put element N of List into Item
        	if property `title` of Item is not `gap` attach Index to `list-` cat N
        	on click Index
        	begin
            	put attribute `data-file` of Index into Step
            	goto SHP2
        	end
            add 1 to N
        end
    end
    else
    begin
    	put 0 into N
    	while true
        begin
        	attach Index to `page-other-` cat N or goto SHP5
            add 1 to N
        end
SHP5:
		if N is greater than 0
        begin
			set the elements of Index to N
            put 0 into N
            while N is less than the elements of Index
            begin
	   	        index Index to N
	   	        attach Index to `page-other-` cat N
	   	        on click Index
	  	        begin
	  	            put attribute `data-file` of Index into Step
		            goto SHP2
		        end
                add 1 to N
            end
        end
    end
    scroll HelpOuter to 0

    rest get Fragment from `_load/ecs~fragment~` cat Step
	attach Code to `code` or goto SHP3
    if the content of Code is `yes`
    begin
    	set the style of Code to `font-family:mono;color:#660000;margin-bottom:1em`
    	put Fragment into Content
    	replace newline with `<br>` in Content
    	replace ` ` with `&nbsp;` in Content
    	set the content of Code to Content
    end
    else set the style of Code to `display:none`

SHP3:
    if Script is not empty
    begin
	   	attach Copy to `copy` or goto SHP4
	   	set the style of Copy to
       		`border:1px solid black;border-radius:0.5em;padding:0.3em;background:lightgray;text-decoration:none`
	    on click Copy
	    begin
        	gosub to StopTestModule
        	put `code` into View
            if Mobile gosub to SetView
            codemirror close ContentEditor
    		codemirror attach to ContentEditor
    		codemirror set content of ContentEditor to Fragment
        	put Fragment into Current
            set the text of NameEditor to empty
            attach Clear to `clear`
            if the content of Clear is `y` set ShowRun else clear ShowRun
 	   	end
    end

SHP4:
    attach Next to `next` or return
    on click Next
    begin
    	put property Step of Pages into Page
        if property `next` of Page is not empty
        begin
	        put property `next` of Page into Step
            goto ShowHelpPage
        end
    end
	return

ListSorter:
    put arg `a` of List into A
    put arg `b` of List into B
    if property `index` of A is greater than property `index` of B put 1 into V
    else if property `index` of A is less than property `index` of B put -1 into V
    else put 0 into V
    set arg `v` of List to V
    stop

StepBack:
    put property Step of Pages into Page
    if property `prev` of Page is not empty
    begin
        put property `prev` of Page into Step
        goto ShowHelpPage
    end
	stop

StepForward:
    put property Step of Pages into Page
    if property `next` of Page is not empty
    begin
        put property `next` of Page into Step
        goto ShowHelpPage
    end
	stop
    
DoRunStop:
    if Running
    begin
    	gosub to StopTestModule
        if Mobile set style `display` of ScriptName to `block`
        stop
    end

    codemirror close ContentEditor
    put the content of ContentEditor into Script
    codemirror attach to ContentEditor

    if Script is empty
    begin
    	alert `Nothing to run`
    	stop
    end
    
	put `run` into View
	if Mobile
    begin
    	gosub to SetView
        set style `display` of ScriptName to `none`
    end
    else if ShowRun
    begin
    	set style `display` of HelpOuter to `none`
        set style `display` of RunPanel to `block`
	end
    
    set attribute `src` of RunStop to `resources/icon/runstop.png`
    set Running
    wait 10 ticks
    
    set the title to `Running ` cat File
    clear RunPanel
    run Script with RunPanel as TestModule nowait then
    begin
        clear Running
    	set attribute `src` of RunStop to `resources/icon/run.png`
        set style `display` of RunPanel to `none`
        set style `display` of HelpOuter to `block`
        if Mobile set style `display` of ScriptName to `none`
        put `help` into View
	end
    stop

StopTestModule:
	if TestModule is running
    begin
    	set the title to `Codex - ` cat File
    	stop TestModule
        clear Running
        clear RunPanel
        if Mobile
        begin
        	put `code` into View
            gosub to SetView
        	codemirror close ContentEditor
    		codemirror attach to ContentEditor
        end
        else put `help` into View
        set style `display` of HelpOuter to `block`
        set style `display` of RunPanel to `none`
        set attribute `src` of RunStop to `resources/icon/run.png`
    end
	return

GetPassword:
	if not PasswordRequested
    begin
	    set PasswordRequested
        if hostname is `localhost` goto SetPasswordValid
        if hostname is `127.0.0.1` goto SetPasswordValid
        get Password from storage as `.password`
	    if Password is empty
        begin
        put `Please provide the admin password` cat newline
            cat `or click OK to use private browser storage.` into Message
        	put prompt Message with `` into Password
        end
        rest get PasswordValid from `_verify/` cat Password
        if PasswordValid is `yes` 
        begin
            put Password into storage as `.password`
        	set PasswordValid
	    end
        else clear PasswordValid
	end
    return

SetPasswordValid:
	set PasswordValid
    return