{
  "commands": {
    "gmap": {
      "syntax": "gmap {name}",
      "description": "This declares a ~m:Google Map~ variable. See ~l:create~.",
      "examples": "gmap Map"
    },
    "create": {
      "syntax": "create {gmap} in {div}%0acreate {marker} in {gmap}",
      "description": "1. Creates a new ~l:gmap!Google Map~ in the specified ~l:div|k|browser~.%0a%0a2. Creates a new ~l:marker~ in the specified ~l:gmap!Google Map~.",
      "examples": "create Map in MapContainer%0acreate Marker in Map"
    },
    "marker": {
      "syntax": "marker {name}",
      "description": "This declares a ~m:marker~ variable. See ~l:create~.%0a%0aA ~m:marker~ is a map pin. You can specify the color of the pin and its title using ~l:set~.",
      "examples": "marker Marker"
    },
    "on": {
      "syntax": "on click/move/type/zoom {gmap} ...%0aon click {marker} ...",
      "description": "Handles events of various kinds arising from ~l:gmap!Google Maps~ and ~l:marker!markers~.%0a%0a~m:click~ : a click in the map or marker%0a%0a~m:move~ : the map was moved by the user%0a%0a~m:type~ : the map type was changed, e.g. roadmap or satellite%0a%0a~m:zoom~ : the zoom level was changed by the user%0a",
      "examples": "on zoom Map go to MapUpdate%0aon click Marker go to ShowInfo"
    },
    "remove": {
      "syntax": "remove markers from {gmap}",
      "description": "Removes all the ~l:marker!markers~ from the ~l:gmap!Google Map~.",
      "examples": "remove markers from Map"
    },
    "set": {
      "syntax": "set [the] key of {gmap} to {value}%0aset [the] latitude/longitude/zoom/type of {gmap} to {value}%0aset [the] title of {marker} to {value}%0aset [the] label of {marker} to {value}%0aset [the] position of {marker} to {value}%0aset [the] color of {marker} to {value}",
      "description": "Sets various attributes of ~l:gmap!Google Maps~ and ~l:marker!markers~.%0a%0a~m:sets the key~ is needed for maps to work at all. API Keys are issued by Google and permit a large allowance of free usage per day before any charges apply. If possible, do not include the key directly in your script as others could then make free use of it. Instead, put it on your server and get it using a REST endpoint. Alternatively, go to your Google Developer Console and specify which URLs should be associated with the key, making it unusable anywhere else.%0a%0aThe ~m:position~ of a ~l:marker~ is a JSON string containing latitude and longitude properties, as for example:%0a%0a~m:{~dq~latitude~dq~:~dq~53.8291119~dq~,~dq~longitude~dq~:~dq~-1.5381586~dq~}~",
      "examples": "set the key of Map to APIKey%0aset the latitude of Map to `44.277691`%0aset the longitude of Map to `-0.78228`%0aset the zoom of Map to `14.2`%0aset the type of Map to `roadmap`%0aset the title of Marker to `Post Office`%0aset the label of Marker to `O`%0aset the position of Marker to CurrentPosition%0aset the color of {marker} to `#ff0`"
    },
    "show": {
      "syntax": "show {gmap}",
      "description": "Shows a ~l:gmap!Google Map~, that is, makes it visible. Called after ~l:create~.",
      "examples": "show Map"
    },
    "update": {
      "syntax": "update {gmap}",
      "description": "Updates a ~l:gmap!Google Map~ after changes have been made by the script that affect how it should be displayed.",
      "examples": "update Map"
    }
  },
  "values": {
    "click position": {
      "syntax": "[the] click position of {gmap}%0a[the] latitude/longitude/zoom/type/bounds of {gmap}%0a[the] latitude/longitude/title of {marker}",
      "description": "1. Gets the position where the user clicked the map. This is a JSON value that holds both latitude and longitude. It can be fed directly into ~l:set|k!set the position of {gmap}~.%0a%0a2. Gets the latitude, longitude, zoom, type or bounds of a ~l:gmap|k!Google Map~. ~m:bounds~ is a JSON value with properties ~m:north~, ~m:south~, ~m:east~ and ~m:west~. The website [Here On The Map](https://hereonthemap.com) uses these to search its database for markers located within the bounds of the map.%0a%0a3. Gets an attribute of a ~l:marker~.",
      "examples": "put the click position of Map into Position%0aput the bound of Map into Bounds%0aput the title of Marker into PinName"
    },
    "latitude": {
      "syntax": "[the] latitude of {gmap}%0a[the] latitude of {marker}",
      "description": "Gets the latitude of the center of a ~l:gmap|k!Google Map~ or the position of a ~l:marker|k~.",
      "examples": "put the latitude of Map into MapLat%0aput the latitude of Marker into MarkerLatitude"
    },
    "longitude": {
      "syntax": "[the] longitude of {gmap}%0a[the] longitude of {marker}",
      "description": "Gets the longitude of the center of a ~l:gmap|k!Google Map~ or the position of a ~l:marker|k~.",
      "examples": "put the longitude of Map into MapLng%0aput the longitude of Marker into MarkerLongitude"
    },
    "type": {
      "syntax": "[the] type of {gmap}",
      "description": "Gets the type (~m:roadmap~ or ~m:satellite~) of a ~l:gmap|k!Google Map~.",
      "examples": "put the type of Map into MapType"
    },
    "title": {
      "syntax": "[the] title of {marker}",
      "description": "Gets the title of a ~l:marker|k~.",
      "examples": "put the title of Marker into Title"
    },
    "bounds": {
      "syntax": "[the] bounds of {gmap}",
      "description": "Gets the bounds of a ~l:gmap|k!Google Map~. ~m:bounds~ is a JSON value with properties ~m:north~, ~m:south~, ~m:east~ and ~m:west~. The website [Here On The Map](https://hereonthemap.com) uses these to search its database for markers located within the bounds of the map. See ~l:on|k!on click~ and ~l:click position!the click position~.%0a",
      "examples": "put the bounds of Map into Bounds"
    },
    "zoom": {
      "syntax": "[the] zoom of {gmap}",
      "description": "Gets the current zoom level for the ~l:gmap|k!Google Map~.",
      "examples": "put the zoom of Map into Zoom"
    }
  },
  "conditions": {},
  "l": "",
  "": {
    "gmap": {
      "syntax": "gmap {map}",
      "description": "Defines a map variable. See also ~l:create~.",
      "examples": "gmap MyMap"
    },
    "marker": {
      "syntax": "marker {name}",
      "description": "Defines a marker - a pin on the map. See also ~l:gmap~ and ~l:create~",
      "examples": "marker Marker"
    },
    "create": {
      "syntax": "create {map} in {div}%0acreate {marker in {map}",
      "description": "Creates a map or a marker. See ~l:gmap~ and ~l:marker~.",
      "examples": "create MyMap in MapDiv%0acreate Marker in MyMap"
    },
    "on": {
      "syntax": "on click/move/type/zoom {map}/{marker} ...",
      "description": "Handle an event arising in a map or a marker.%0aA click event occurs when the user clicks the map or a marker on the map.%0aA move event occurs when the map is dragged.%0aA type event occurs when the type of the map is changed, e.g. from roadmap to satellite.%0aA zoom event occurs when the user zooms in or out of the map.%0a%0aSee ~l:gmap~, ~l:marker~ and ~l:set~.",
      "examples": "on click MyMap goto ...%0aon click Marker goto ...%0aon move MyMap goto ...%0aon type MyMap goto ...%0aon zoom MyMap goto ..."
    },
    "remove": {
      "syntax": "remove markers from {map}",
      "description": "This removes all markers from the map. See also ~l:map~, ~l:marker~ and ~l:create~.",
      "examples": "remove markers from MyMap."
    },
    "set": {
      "syntax": "set [the] key/latitude/longitude/type/zoom of {map} to {value}%0aset the title/position/color of {marker} to {value}",
      "description": "Sets an attribute of a ~l:map~ or of a ~l:marker~. Map attributes are key, latitude, longitude, type and zoom; marker attributes are title, position and color.%0a%0aThe ~sq~key~sq~ of a map is a code supplied by Google that authorizes use of the map on any given website. A key may apply to all websites or just to specific ones. Visit the Google Developer Console to request a key. You will need a Google account to do this but there are no costs until the usage of your maps becomes quite large.%0a%0aLatitude and longitude are that of the center of a map.%0a%0aThe Type of a map is as defined by Google, e.g. ~sq~roadmap~sq~ or ~sq~satellite~sq~.%0a%0aThe Zoom of a map is a decimal value that ranges from very wide angle (0) through to fully zoomed in (2 or 22).%0a%0aThe Title of a marker is displayed when the mouse hovers over it. (on a PC, of course; on a mobile there is no hover).%0a%0aThe Position of a marker is a JSON string containing 2 decimal properties; latitude and longitude. For example:%0a%0a{~dq~latitude~dq~:~dq~`53.8291119`~dq~,~dq~longitude~dq~:~dq~-1.5381586~dq~}%0a%0aThe Color of a marker is a standard CSS color e.g. `pink` or `#ff63a9`.%0a%0aSee also ~l:map~ and ~l:marker~.",
      "examples": "set the key of MyMap to `AIzaSyDTWe5hoygkgkO96XRsEbrgi1Daty1uJvQ`%0aset the latitude of MyMap to `53.8291119`%0aset the longitude of MyMap to`-1.5381586`%0aset the zoom of MyMap to `17.0`%0aset the title of Marker to `Central Library`%0aset the position of Marker to Position%0aset the color of Marker to `#c5e`"
    },
    "show": {
      "syntax": "show {map}",
      "description": "Make the newly-created map visible. See also ~l:map~ and ~l:create~.",
      "examples": "show MyMap"
    }
  }
}