{
  "commands": {
    "json shuffle": {
      "syntax": "json shuffle {list}",
      "description": "Shuffles the contents of a list into random order.",
      "examples": "json shuffle MyList"
    },
    "json add": {
      "syntax": "json add {item} to {array}",
      "description": "This adds an element to a JSON array.",
      "examples": "json add `Egypt` to Countries"
    },
    "json delete": {
      "syntax": "json delete property {name} from/of {object}%0ajson delete element {index} from/of {object}",
      "description": "This deletes the named property, or the element at a specific index, from the JSON array given.",
      "examples": "json delete property `name` from PersonalDetails%0ajson delete element 5 of TheArray"
    },
    "json format": {
      "syntax": "json format {item}",
      "description": "~m:json format~ deals with badly-formatted JSON strings that contain redundant spacing and line breaks. It uses the internal ~m:JSON.parse~ and ~m:JSON.stringify~ to get the item into a standard format.",
      "examples": "json format MyData"
    },
    "json parse": {
      "syntax": "json parse {url} as {variable}",
      "description": "This parses a URL, splitting it up into its component parts so they can be easily worked on. In the example above, the result in ~m:ParsedValue~ would be%0a%0a~m:{<br />~%0a~m:&nbsp;&nbsp;&quot;protocol&quot;:&quot;https&quot;,<br />~%0a~m:&nbsp;&nbsp;&quot;domain&quot;:&quot;easycoder.software&quot;,<br />~%0a~m:&nbsp;&nbsp;&quot;arg&quot;:&quot;value=56&quot;<br />~%0a~m:}~",
      "examples": "json parse `https://easycoder.software/?value=56` as ParsedValue"
    },
    "json rename": {
      "syntax": "json rename {property} to {new name} in {object}",
      "description": "This renames a property in a JSON object.",
      "examples": "json rename `mail` to `email` in Details"
    },
    "json sort": {
      "syntax": "json sort {list}",
      "description": "Sorts the contents of a list into ascending alphabetical order.",
      "examples": "json sort MyList"
    },
    "json split": {
      "syntax": "json split {item} [on {separator}] into {variable}",
      "description": "Splits a variable into an array of parts on the given separator. If no separator is given the separator is set to a newline (%0a).",
      "examples": "json split Paragraph into Lines%0ajson split Text on `~` into Tokens"
    }
  },
  "values": {
    "": {
      "syntax": "",
      "description": "",
      "examples": ""
    },
    "json keys": {
      "syntax": "[the] json keys of {object}",
      "description": "Returns the keys of all the properties in the JSON object as a JSON array.",
      "examples": "put the json keys of PersonalDetails into MyArray"
    },
    "json count": {
      "syntax": "[the] json count of {array}",
      "description": "Returns the number of elements in the specified array. See also ~l:json size~, which does the same thing.",
      "examples": "put the json count of Rows into NRows"
    },
    "json size": {
      "syntax": "[the] json size of {array}",
      "description": "Returns the number of elements in the specified array. See also ~l:json count~, which does the same thing.",
      "examples": "put the json size of Rows into NRows"
    },
    "json index": {
      "syntax": "[the] json index of {item} in {array}",
      "description": "",
      "examples": "put the json index of `August` in Months into Index"
    }
  },
  "conditions": {}
}