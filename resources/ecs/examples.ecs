!   Examples

    script Examples
    
    import module Showdown
    
    module DiceRollerModule
    div DiceRoller
    button ShowDiceRoller
    module ImageSwitcherModule
    div ImageSwitcher
    button ShowImageSwitcher
    module UserCaptureModule
    div UserCapture
    button ShowUserCapture
    module LifeModule
    div Life
    button ShowLife
    button ShowLifeDoc
    div Status
    a HowItWorks
    variable Content
    variable Script
    variable Message
    
    rest get Content from `/resources/md/examples.md`
    replace `/SHOW-DICEROLLER/` with `<button id="show-diceroller">Show</button>` in Content
    replace `/SHOW-IMAGESWITCHER/` with `<button id="show-imageswitcher">Show</button>` in Content
    replace `/SHOW-USERCAPTURE/` with `<button id="show-usercapture">Show</button>` in Content
    replace `/SHOW-LIFE/` with `<button id="show-life">Show</button>` in Content
    replace `/LIFEDOC/` with `<button id="show-lifedoc">Here</button>` in Content

    on message
    begin
    	put the message into Message
        if Message is `restore` send `show` to parent
        else if Message is `pause` begin end
        else go to Start
    end

    attach Status to `ec-status`
    set ready
    stop

Start:
	scroll to 0
    send Content to Showdown

    if DiceRollerModule is not running
    begin
    	wait 10 ticks
    	rest get Script from `/resources/ecs/diceroller.ecs`
        run Script as DiceRollerModule
        attach DiceRoller to `ex-diceroller`
        attach ShowDiceRoller to `show-diceroller`
        fork to InitDiceRoller
    end

    if ImageSwitcherModule is not running
    begin
    	wait 10 ticks
    	rest get Script from `/resources/ecs/imageswitcher.ecs`
        run Script as ImageSwitcherModule
        attach ImageSwitcher to `ex-imageswitcher`
        attach ShowImageSwitcher to `show-imageswitcher`
        fork to InitImageSwitcher
    end
    send to ImageSwitcherModule

    if UserCaptureModule is not running
    begin
    	wait 10 ticks
    	rest get Script from `/resources/ecs/usercapture.ecs`
        run Script as UserCaptureModule
        attach UserCapture to `ex-usercapture`
        attach ShowUserCapture to `show-usercapture`
        fork to InitUserCapture
    end
    
    if LifeModule is not running
    begin
    	wait 10 ticks
    	rest get Script from `/resources/ecs/lifedemo.ecs`
        run Script as LifeModule
        attach Life to `ex-life`
        attach ShowLife to `show-life`
        fork to InitLife
    end
    attach ShowLifeDoc to `show-lifedoc`
    on click ShowLifeDoc send `life` to parent

    attach HowItWorks to `how-it-works`
    on click HowItWorks
    begin
        alert `How it works`
    end
    
    stop

InitDiceRoller:
	send `hide` to DiceRollerModule
    set the text of ShowDiceRoller to `Show`
    on click ShowDiceRoller
    begin
        set the text of ShowDiceRoller to `Hide`
        on click ShowDiceRoller go to InitDiceRoller
        send `show` to DiceRollerModule
    end
	stop

InitImageSwitcher:
    set style `display` of ImageSwitcher to `none`
    set the text of ShowImageSwitcher to `Show`
    on click ShowImageSwitcher
    begin
        set style `display` of ImageSwitcher to `block`
        set the text of ShowImageSwitcher to `Hide`
        on click ShowImageSwitcher go to InitImageSwitcher
    end
	stop

InitUserCapture:
	send `hide` to UserCaptureModule
    set the text of ShowUserCapture to `Show`
    on click ShowUserCapture
    begin
        set the text of ShowUserCapture to `Hide`
        on click ShowUserCapture go to InitUserCapture
    	send `show` to UserCaptureModule
    end
	stop

InitLife:
    set style `display` of Life to `none`
    send `hide` to LifeModule
    set the text of ShowLife to `Show`
    on click ShowLife
    begin
        set style `display` of Life to `block`
        set the text of ShowLife to `Hide`
        on click ShowLife go to InitLife
    	send `show` to LifeModule
    end
	stop
